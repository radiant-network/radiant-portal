services:
  starrocks:
    image: starrocks/allin1-ubuntu
    container_name: starrocks_radiant
    ports:
      - "9030:9030"
      - "8030:8030"
      - "8040:8040"
    healthcheck:
      test: >
        curl -sf http://localhost:8030/api/health || exit 1
      interval: 10s
      timeout: 5s
      retries: 5
  postgres:
    image: postgres
    container_name: postgres_radiant
    ports:
      - "5432:5432"
    environment:
      POSTGRES_PASSWORD: radiant
      POSTGRES_USER: radiant
      POSTGRES_DB: radiant
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U radiant"]
      interval: 10s
      timeout: 5s
      retries: 5
  keycloak:
    image: quay.io/keycloak/keycloak:latest
    container_name: keycloak
    volumes:
      - ./scripts/init-keycloak:/opt/keycloak/data/import
    environment:
        KC_HOSTNAME: localhost
        KC_HOSTNAME_PORT: 8080
        KC_HOSTNAME_STRICT: 'false'
        KC_HOSTNAME_STRICT_HTTPS: 'false'
        KC_LOG_LEVEL: info
        KC_METRICS_ENABLED: 'true'
        KC_HEALTH_ENABLED: 'true'
        KEYCLOAK_ADMIN: admin
        KEYCLOAK_ADMIN_PASSWORD: admin
    command: ["start-dev", "--import-realm"]
    healthcheck:
      test: ['CMD-SHELL', '[ -f /tmp/HealthCheck.java ] || echo "public class HealthCheck { public static void main(String[] args) throws java.lang.Throwable { System.exit(java.net.HttpURLConnection.HTTP_OK == ((java.net.HttpURLConnection)new java.net.URL(args[0]).openConnection()).getResponseCode() ? 0 : 1); } }" > /tmp/HealthCheck.java && java /tmp/HealthCheck.java http://localhost:9000/health/live']
      interval: 5s
      timeout: 5s
      retries: 30
    ports:
      - "8080:8080"
      - "9000:9000"

  api:
    build: .
    container_name: radiant-api
    ports:
      - "8090:8090"
    environment:
      DB_USERNAME: root
      DB_PASSWORD:
      DB_HOST: starrocks
      DB_PORT: 9030
      DB_NAME: test_db
      PGUSER: radiant
      PGPASSWORD: radiant
      PGPORT: 5432
      PGHOST: postgres
      PGDATABASE: radiant
      PGSSLMODE: disable
      CORS_ALLOWED_ORIGINS: '*'
      KEYCLOAK_HOST: http://keycloak:8080
      KEYCLOAK_REALM: CQDG
      KEYCLOAK_CLIENT: radiant
      KEYCLOAK_CLIENT_ROLE: radiant
      PUBMED_BASE_URL: https://api.ncbi.nlm.nih.gov
    depends_on:
      init-schema:
        condition: service_completed_successfully
      postgres:
        condition: service_healthy
      keycloak:
        condition: service_healthy

  init-schema:
    image: starrocks/allin1-ubuntu
    container_name: init-schema
    depends_on:
      starrocks:
        condition: service_healthy
    volumes:
      - ./scripts/init-sql:/docker-entrypoint-initdb.d
    entrypoint: >
      /bin/bash -c "sleep 10 && 
      mysql -hstarrocks -P9030 -uroot < /docker-entrypoint-initdb.d/init_starrocks.sql;"

  postgres-clinical-data:
    image: postgres
    depends_on:
      api:
        condition: service_started
    volumes:
      - ./scripts/init-sql:/docker-entrypoint-initdb.d
    entrypoint: [ "sh", "-c" ]
    command:
      - -c
      - |
        export PGPASSWORD='radiant'; psql -h postgres -U radiant -d radiant -f /docker-entrypoint-initdb.d/insert_clinical_data.sql;
