"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.LoggerBase = void 0;
/**
 * core.Log
 * ------------------------------------------------
 *
 * This is the main LoggerBase Object. You can create a scope logger
 * or directly use the static log methods.
 *
 * By Default it uses the debug-adapter, but you are able to change
 * this in the start up process in the core/index.ts file.
 */
class LoggerBase {
    static parsePathToScope(filepath) {
        if (filepath) {
            const sp = filepath.split('/');
            const len = sp.length;
            const filename = sp[len - 1];
            return filename;
        }
        return filepath;
    }
    constructor(scope) {
        this.scope = LoggerBase.parsePathToScope(scope !== null && scope !== void 0 ? scope : LoggerBase.DEFAULT_SCOPE);
    }
    debug(message, ...args) {
        this.log('debug', message, ...args);
    }
    info(message, ...args) {
        this.log('info', message, ...args);
    }
    warn(message, ...args) {
        this.log('warn', message, ...args);
    }
    error(message, ...args) {
        this.log('error', message, ...args);
    }
    formatScope() {
        return this.scope !== undefined ? `[${this.scope}]` : '';
    }
}
exports.LoggerBase = LoggerBase;
LoggerBase.DEFAULT_SCOPE = 'app';
//# sourceMappingURL=LoggerBase.js.map