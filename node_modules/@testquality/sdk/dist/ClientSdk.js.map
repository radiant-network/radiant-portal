{"version":3,"file":"ClientSdk.js","sourceRoot":"","sources":["../src/ClientSdk.ts"],"names":[],"mappings":"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","sourcesContent":["import axios, { type AxiosInstance } from 'axios';\nimport Debug from 'debug';\nimport { type PersistentStorage } from './PersistentStorage';\nimport {\n  type APIWorkerInterface,\n  EmptyLogger,\n  type LoggerInterface,\n} from './common';\nimport { type Options } from './Options';\nimport { Auth, type AuthCallback, TokenStorageImpl } from './auth';\nimport { type HttpError } from './exceptions';\nimport { type TokenStorage } from './TokenStorage';\n\nexport let _client: ClientSdk | undefined;\n\nconst debug = Debug('tq:sdk:client');\n\nexport class ClientSdk {\n  private readonly auth: Auth;\n  public logger: LoggerInterface;\n  public api: AxiosInstance;\n  public clientId: string;\n  public clientSecret: string;\n  public debug: boolean;\n  public tokenStorage: TokenStorage;\n  public persistentStorage?: PersistentStorage;\n  public apiWorker?: APIWorkerInterface;\n  public id = Math.random();\n\n  public errorHandlerDefault = (newError: HttpError) => {\n    this.logger.error(\n      newError.stack ? newError.stack : newError.message,\n      newError.title,\n      newError.status,\n      newError.code,\n      newError.trace,\n    );\n  };\n\n  public errorHandler: (newError: HttpError) => void = this.errorHandlerDefault;\n\n  constructor(options: Options) {\n    debug('constructor', { id: this.id, versions: 1, options });\n    const baseUrl = options.baseUrl ?? 'https://api.testquality.com';\n    this.logger = options.logger ?? new EmptyLogger();\n\n    this.api =\n      options.api ??\n      axios.create({\n        baseURL: `${baseUrl}/api`,\n        timeout: 1000000,\n        headers: {\n          'Content-Type': 'application/json',\n          Accept: 'application/json',\n        },\n        transformResponse: [\n          function transformResponse(data, headers) {\n            if (headers['content-type'] === 'application/json') {\n              return JSON.parse(data, (_, value) =>\n                value === null ? undefined : value,\n              );\n            }\n            return data;\n          },\n        ],\n      });\n\n    this.apiWorker = options.apiWorker;\n    this.clientId = options.clientId;\n    this.clientSecret = options.clientSecret;\n    this.debug = !!options.debug;\n    if (options.errorHandler) {\n      this.errorHandler = options.errorHandler;\n    }\n    this.persistentStorage = options.persistentStorage;\n    this.tokenStorage =\n      options.tokenStorage ?? new TokenStorageImpl(options.persistentStorage);\n\n    this.auth = new Auth(this.tokenStorage, this, options.authCallback);\n  }\n\n  public getAuth(\n    /**\n     * @deprecated authCallback is set in constructor\n     */\n    authCallback?: AuthCallback,\n  ) {\n    if (authCallback) {\n      console.warn(\n        'Param authCallback has been deprecated since version 1.12.11',\n      );\n    }\n    return this.auth;\n  }\n\n  /**\n   * @deprecated since version 1.12.11\n   */\n  public setAuth() {\n    console.warn('Method has been deprecated since version 1.12.11');\n    return this.getAuth();\n  }\n\n  public setErrorHandler(errorHandler: (newError: HttpError) => void): void {\n    this.errorHandler = errorHandler;\n  }\n\n  public setAPIWorker(apiWorker: APIWorkerInterface) {\n    debug('setAPIWorker');\n    if (!this.apiWorker) {\n      this.apiWorker = apiWorker;\n    }\n  }\n}\n\nexport function setGlobalClient(client?: ClientSdk) {\n  _client = client;\n}\n\nexport function getGlobalClient(): ClientSdk {\n  if (!_client) {\n    throw new Error('No global client has been set up');\n  }\n\n  return _client;\n}\n"]}