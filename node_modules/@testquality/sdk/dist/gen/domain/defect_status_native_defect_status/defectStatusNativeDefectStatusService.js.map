{"version":3,"file":"defectStatusNativeDefectStatusService.js","sourceRoot":"","sources":["../../../../src/gen/domain/defect_status_native_defect_status/defectStatusNativeDefectStatusService.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * Copyright (C) 2021 BitModern, Inc - All Rights Reserved\n */\n\nimport { _client } from '../../../ClientSdk';\nimport { getResponse } from '../../actions/getResponse';\nimport { chunkArray } from '../../actions/chunkArray';\nimport type {\n  QueryParams,\n  QueryParamsWithList,\n} from '../../actions/QueryParams';\nimport type { MessageResponse } from '../../actions/MessageResponse';\nimport type { ResourceList } from '../../models/ResourceList';\nimport type { DefectStatusNativeDefectStatus } from './DefectStatusNativeDefectStatus';\nimport type { DefectStatusNativeDefectStatusApi } from './DefectStatusNativeDefectStatusApi';\n\nexport const defectStatusNativeDefectStatusDetach = (\n  data: Partial<DefectStatusNativeDefectStatus>,\n  queryParams?: QueryParams<Partial<DefectStatusNativeDefectStatus>>,\n): Promise<MessageResponse> => {\n  if (data.id === undefined) {\n    return Promise.reject(new Error('Must supply id'));\n  }\n  const config: QueryParams<Partial<DefectStatusNativeDefectStatus>> = {\n    method: 'delete',\n    url: `/defect_status_native_defect_status/${data.id}`,\n    params: queryParams?.params,\n  };\n\n  return queryParams?.batch\n    ? queryParams.batch.addBatch<MessageResponse>(config)\n    : getResponse<MessageResponse, Partial<DefectStatusNativeDefectStatus>>(\n        queryParams?.api ?? _client?.api,\n        config,\n      );\n};\n\nexport const defectStatusNativeDefectStatusDeleteMany = (\n  data: (Partial<DefectStatusNativeDefectStatus> & { id: number })[],\n  queryParams?: QueryParamsWithList<\n    Partial<DefectStatusNativeDefectStatus & { id: number }>\n  >,\n): Promise<{ count: number }[]> => {\n  const chunks = chunkArray(data, 1000);\n  return Promise.all(\n    chunks.map((chunk) => {\n      const config: QueryParamsWithList<\n        Partial<DefectStatusNativeDefectStatus> & { id: number }\n      > = {\n        method: 'post',\n        url: `/defect_status_native_defect_status/delete`,\n        params: queryParams?.params,\n        list: chunk,\n        headers: queryParams?.headers,\n      };\n\n      return queryParams?.batch\n        ? queryParams.batch.addBatch<{ count: number }>(config)\n        : getResponse<\n            { count: number },\n            Partial<DefectStatusNativeDefectStatus> & { id: number }\n          >(queryParams?.api ?? _client?.api, config);\n    }),\n  );\n};\n\nexport const defectStatusNativeDefectStatusUpdateOne = (\n  id: number,\n  data: Partial<DefectStatusNativeDefectStatus>,\n  queryParams?: QueryParams<Partial<DefectStatusNativeDefectStatus>>,\n): Promise<DefectStatusNativeDefectStatus> => {\n  const config: QueryParams<Partial<DefectStatusNativeDefectStatus>> = {\n    method: 'put',\n    url: `/defect_status_native_defect_status/${id}`,\n    params: queryParams?.params,\n    data,\n  };\n\n  return queryParams?.batch\n    ? queryParams.batch.addBatch<DefectStatusNativeDefectStatus>(config)\n    : getResponse<\n        DefectStatusNativeDefectStatus,\n        Partial<DefectStatusNativeDefectStatus>\n      >(queryParams?.api ?? _client?.api, config);\n};\n\nexport const defectStatusNativeDefectStatusUpdateMany = (\n  data: (Partial<DefectStatusNativeDefectStatus> & { id: number })[],\n  queryParams?: QueryParamsWithList<\n    Partial<DefectStatusNativeDefectStatus> & { id: number }\n  >,\n): Promise<DefectStatusNativeDefectStatus[][]> => {\n  const chunks = chunkArray(data, 1000);\n  return Promise.all(\n    chunks.map((chunk) => {\n      const config: QueryParamsWithList<\n        Partial<DefectStatusNativeDefectStatus> & { id: number }\n      > = {\n        method: 'post',\n        url: queryParams?.url ?? `/defect_status_native_defect_status`,\n        params: queryParams?.params,\n        list: chunk,\n      };\n\n      return queryParams?.batch\n        ? queryParams.batch.addBatch<DefectStatusNativeDefectStatus[]>(config)\n        : getResponse<\n            DefectStatusNativeDefectStatus[],\n            Partial<DefectStatusNativeDefectStatus> & { id: number }\n          >(queryParams?.api ?? _client?.api, config);\n    }),\n  );\n};\n\nexport const defectStatusNativeDefectStatusCreateOne = (\n  data: Partial<DefectStatusNativeDefectStatus>,\n  queryParams?: QueryParams<Partial<DefectStatusNativeDefectStatus>>,\n): Promise<DefectStatusNativeDefectStatus> => {\n  const config: QueryParams<Partial<DefectStatusNativeDefectStatus>> = {\n    method: 'post',\n    url: queryParams?.url ?? `/defect_status_native_defect_status`,\n    params: queryParams?.params,\n    data,\n  };\n\n  return queryParams?.batch\n    ? queryParams.batch.addBatch<DefectStatusNativeDefectStatus>(config)\n    : getResponse<\n        DefectStatusNativeDefectStatus,\n        Partial<DefectStatusNativeDefectStatus>\n      >(queryParams?.api ?? _client?.api, config);\n};\n\nexport const defectStatusNativeDefectStatusCreateMany = (\n  data: Partial<DefectStatusNativeDefectStatus>[],\n  queryParams?: QueryParamsWithList<Partial<DefectStatusNativeDefectStatus>>,\n): Promise<DefectStatusNativeDefectStatus[][]> => {\n  const chunks = chunkArray(data, 1000);\n  return Promise.all(\n    chunks.map((chunk) => {\n      const config: QueryParamsWithList<\n        Partial<DefectStatusNativeDefectStatus>\n      > = {\n        method: 'post',\n        url: queryParams?.url ?? `/defect_status_native_defect_status`,\n        params: queryParams?.params,\n        list: chunk,\n      };\n\n      return queryParams?.batch\n        ? queryParams.batch.addBatch<DefectStatusNativeDefectStatus[]>(config)\n        : getResponse<\n            DefectStatusNativeDefectStatus[],\n            Partial<DefectStatusNativeDefectStatus>\n          >(queryParams?.api ?? _client?.api, config);\n    }),\n  );\n};\n\nexport const defectStatusNativeDefectStatusGetMany = (\n  queryParams?: QueryParams<Partial<DefectStatusNativeDefectStatus>>,\n): Promise<ResourceList<DefectStatusNativeDefectStatusApi>> => {\n  const config: QueryParams<Partial<DefectStatusNativeDefectStatus>> = {\n    method: 'get',\n    url: queryParams?.url ?? `/defect_status_native_defect_status`,\n    params: queryParams?.params,\n    cancelToken: queryParams?.cancelToken,\n  };\n\n  return queryParams?.batch\n    ? queryParams.batch.addBatch<\n        ResourceList<DefectStatusNativeDefectStatusApi>\n      >(config)\n    : getResponse<\n        ResourceList<DefectStatusNativeDefectStatusApi>,\n        Partial<DefectStatusNativeDefectStatus>\n      >(queryParams?.api ?? _client?.api, config);\n};\n\nexport const defectStatusNativeDefectStatusGetOne = (\n  id: number,\n  queryParams?: QueryParams<Partial<DefectStatusNativeDefectStatus>>,\n): Promise<DefectStatusNativeDefectStatusApi> => {\n  const config: QueryParams<Partial<DefectStatusNativeDefectStatus>> = {\n    method: 'get',\n    url: `${queryParams?.url ?? `/defect_status_native_defect_status/${id}`}`,\n    params: queryParams?.params,\n    cancelToken: queryParams?.cancelToken,\n  };\n\n  return queryParams?.batch\n    ? queryParams.batch.addBatch<DefectStatusNativeDefectStatusApi>(config)\n    : getResponse<\n        DefectStatusNativeDefectStatusApi,\n        Partial<DefectStatusNativeDefectStatus>\n      >(queryParams?.api ?? _client?.api, config);\n};\n"]}