/**
 * Copyright (C) 2021 BitModern, Inc - All Rights Reserved
 */
import type { QueryParams, QueryParamsWithList } from '../../actions/QueryParams';
import type { MessageResponse } from '../../actions/MessageResponse';
import type { ResourceList } from '../../models/ResourceList';
import type { Notifications } from './Notifications';
import type { NotificationsApi } from './NotificationsApi';
export declare const notificationsGetMany: (queryParams?: QueryParams<Partial<Notifications>>) => Promise<ResourceList<NotificationsApi>>;
export declare const notificationsGetOne: (id: string, queryParams?: QueryParams<Partial<Notifications>>) => Promise<NotificationsApi>;
export declare const notificationsDeleteOne: (id: string, queryParams?: QueryParams<Partial<Notifications>>) => Promise<MessageResponse>;
export declare const notificationsDeleteMany: (data: (Partial<Notifications> & {
    id: string;
})[], queryParams?: QueryParamsWithList<Partial<Notifications> & {
    id: string;
}>) => Promise<{
    count: number;
}[]>;
export declare const notificationsUpdateOne: (id: string, data: Partial<Notifications>, queryParams?: QueryParams<Partial<Notifications>>) => Promise<Notifications>;
export declare const notificationsUpdateMany: (data: (Partial<Notifications> & {
    id: string;
})[], queryParams?: QueryParamsWithList<Partial<Notifications> & {
    id: string;
}>) => Promise<Notifications[][]>;
export declare const notificationsCreateOne: (data: Partial<Notifications>, queryParams?: QueryParams<Partial<Notifications>>) => Promise<Notifications>;
export declare const notificationsCreateMany: (data: Partial<Notifications>[], queryParams?: QueryParamsWithList<Partial<Notifications>>) => Promise<Notifications[][]>;
//# sourceMappingURL=notificationsService.d.ts.map