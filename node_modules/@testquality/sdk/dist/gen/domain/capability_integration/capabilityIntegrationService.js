"use strict";
/**
 * Copyright (C) 2021 BitModern, Inc - All Rights Reserved
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.capabilityIntegrationGetOne = exports.capabilityIntegrationGetMany = exports.capabilityIntegrationCreateMany = exports.capabilityIntegrationCreateOne = exports.capabilityIntegrationUpdateMany = exports.capabilityIntegrationUpdateOne = exports.capabilityIntegrationDeleteMany = exports.capabilityIntegrationDetach = void 0;
const ClientSdk_1 = require("../../../ClientSdk");
const getResponse_1 = require("../../actions/getResponse");
const chunkArray_1 = require("../../actions/chunkArray");
const capabilityIntegrationDetach = (data, queryParams) => {
    var _a;
    if (data.id === undefined) {
        return Promise.reject(new Error('Must supply id'));
    }
    const config = {
        method: 'delete',
        url: `/capability_integration/${data.id}`,
        params: queryParams === null || queryParams === void 0 ? void 0 : queryParams.params,
    };
    return (queryParams === null || queryParams === void 0 ? void 0 : queryParams.batch)
        ? queryParams.batch.addBatch(config)
        : (0, getResponse_1.getResponse)((_a = queryParams === null || queryParams === void 0 ? void 0 : queryParams.api) !== null && _a !== void 0 ? _a : ClientSdk_1._client === null || ClientSdk_1._client === void 0 ? void 0 : ClientSdk_1._client.api, config);
};
exports.capabilityIntegrationDetach = capabilityIntegrationDetach;
const capabilityIntegrationDeleteMany = (data, queryParams) => {
    const chunks = (0, chunkArray_1.chunkArray)(data, 1000);
    return Promise.all(chunks.map((chunk) => {
        var _a;
        const config = {
            method: 'post',
            url: `/capability_integration/delete`,
            params: queryParams === null || queryParams === void 0 ? void 0 : queryParams.params,
            list: chunk,
            headers: queryParams === null || queryParams === void 0 ? void 0 : queryParams.headers,
        };
        return (queryParams === null || queryParams === void 0 ? void 0 : queryParams.batch)
            ? queryParams.batch.addBatch(config)
            : (0, getResponse_1.getResponse)((_a = queryParams === null || queryParams === void 0 ? void 0 : queryParams.api) !== null && _a !== void 0 ? _a : ClientSdk_1._client === null || ClientSdk_1._client === void 0 ? void 0 : ClientSdk_1._client.api, config);
    }));
};
exports.capabilityIntegrationDeleteMany = capabilityIntegrationDeleteMany;
const capabilityIntegrationUpdateOne = (id, data, queryParams) => {
    var _a;
    const config = {
        method: 'put',
        url: `/capability_integration/${id}`,
        params: queryParams === null || queryParams === void 0 ? void 0 : queryParams.params,
        data,
    };
    return (queryParams === null || queryParams === void 0 ? void 0 : queryParams.batch)
        ? queryParams.batch.addBatch(config)
        : (0, getResponse_1.getResponse)((_a = queryParams === null || queryParams === void 0 ? void 0 : queryParams.api) !== null && _a !== void 0 ? _a : ClientSdk_1._client === null || ClientSdk_1._client === void 0 ? void 0 : ClientSdk_1._client.api, config);
};
exports.capabilityIntegrationUpdateOne = capabilityIntegrationUpdateOne;
const capabilityIntegrationUpdateMany = (data, queryParams) => {
    const chunks = (0, chunkArray_1.chunkArray)(data, 1000);
    return Promise.all(chunks.map((chunk) => {
        var _a, _b;
        const config = {
            method: 'post',
            url: (_a = queryParams === null || queryParams === void 0 ? void 0 : queryParams.url) !== null && _a !== void 0 ? _a : `/capability_integration`,
            params: queryParams === null || queryParams === void 0 ? void 0 : queryParams.params,
            list: chunk,
        };
        return (queryParams === null || queryParams === void 0 ? void 0 : queryParams.batch)
            ? queryParams.batch.addBatch(config)
            : (0, getResponse_1.getResponse)((_b = queryParams === null || queryParams === void 0 ? void 0 : queryParams.api) !== null && _b !== void 0 ? _b : ClientSdk_1._client === null || ClientSdk_1._client === void 0 ? void 0 : ClientSdk_1._client.api, config);
    }));
};
exports.capabilityIntegrationUpdateMany = capabilityIntegrationUpdateMany;
const capabilityIntegrationCreateOne = (data, queryParams) => {
    var _a, _b;
    const config = {
        method: 'post',
        url: (_a = queryParams === null || queryParams === void 0 ? void 0 : queryParams.url) !== null && _a !== void 0 ? _a : `/capability_integration`,
        params: queryParams === null || queryParams === void 0 ? void 0 : queryParams.params,
        data,
    };
    return (queryParams === null || queryParams === void 0 ? void 0 : queryParams.batch)
        ? queryParams.batch.addBatch(config)
        : (0, getResponse_1.getResponse)((_b = queryParams === null || queryParams === void 0 ? void 0 : queryParams.api) !== null && _b !== void 0 ? _b : ClientSdk_1._client === null || ClientSdk_1._client === void 0 ? void 0 : ClientSdk_1._client.api, config);
};
exports.capabilityIntegrationCreateOne = capabilityIntegrationCreateOne;
const capabilityIntegrationCreateMany = (data, queryParams) => {
    const chunks = (0, chunkArray_1.chunkArray)(data, 1000);
    return Promise.all(chunks.map((chunk) => {
        var _a, _b;
        const config = {
            method: 'post',
            url: (_a = queryParams === null || queryParams === void 0 ? void 0 : queryParams.url) !== null && _a !== void 0 ? _a : `/capability_integration`,
            params: queryParams === null || queryParams === void 0 ? void 0 : queryParams.params,
            list: chunk,
        };
        return (queryParams === null || queryParams === void 0 ? void 0 : queryParams.batch)
            ? queryParams.batch.addBatch(config)
            : (0, getResponse_1.getResponse)((_b = queryParams === null || queryParams === void 0 ? void 0 : queryParams.api) !== null && _b !== void 0 ? _b : ClientSdk_1._client === null || ClientSdk_1._client === void 0 ? void 0 : ClientSdk_1._client.api, config);
    }));
};
exports.capabilityIntegrationCreateMany = capabilityIntegrationCreateMany;
const capabilityIntegrationGetMany = (queryParams) => {
    var _a, _b;
    const config = {
        method: 'get',
        url: (_a = queryParams === null || queryParams === void 0 ? void 0 : queryParams.url) !== null && _a !== void 0 ? _a : `/capability_integration`,
        params: queryParams === null || queryParams === void 0 ? void 0 : queryParams.params,
        cancelToken: queryParams === null || queryParams === void 0 ? void 0 : queryParams.cancelToken,
    };
    return (queryParams === null || queryParams === void 0 ? void 0 : queryParams.batch)
        ? queryParams.batch.addBatch(config)
        : (0, getResponse_1.getResponse)((_b = queryParams === null || queryParams === void 0 ? void 0 : queryParams.api) !== null && _b !== void 0 ? _b : ClientSdk_1._client === null || ClientSdk_1._client === void 0 ? void 0 : ClientSdk_1._client.api, config);
};
exports.capabilityIntegrationGetMany = capabilityIntegrationGetMany;
const capabilityIntegrationGetOne = (id, queryParams) => {
    var _a, _b;
    const config = {
        method: 'get',
        url: `${(_a = queryParams === null || queryParams === void 0 ? void 0 : queryParams.url) !== null && _a !== void 0 ? _a : `/capability_integration/${id}`}`,
        params: queryParams === null || queryParams === void 0 ? void 0 : queryParams.params,
        cancelToken: queryParams === null || queryParams === void 0 ? void 0 : queryParams.cancelToken,
    };
    return (queryParams === null || queryParams === void 0 ? void 0 : queryParams.batch)
        ? queryParams.batch.addBatch(config)
        : (0, getResponse_1.getResponse)((_b = queryParams === null || queryParams === void 0 ? void 0 : queryParams.api) !== null && _b !== void 0 ? _b : ClientSdk_1._client === null || ClientSdk_1._client === void 0 ? void 0 : ClientSdk_1._client.api, config);
};
exports.capabilityIntegrationGetOne = capabilityIntegrationGetOne;
//# sourceMappingURL=capabilityIntegrationService.js.map