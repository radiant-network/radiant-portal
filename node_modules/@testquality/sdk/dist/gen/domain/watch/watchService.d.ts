/**
 * Copyright (C) 2021 BitModern, Inc - All Rights Reserved
 */
import type { QueryParams, QueryParamsWithList } from '../../actions/QueryParams';
import type { MessageResponse } from '../../actions/MessageResponse';
import type { ResourceList } from '../../models/ResourceList';
import type { Watch } from './Watch';
import type { WatchApi } from './WatchApi';
export declare const watchGetMany: (queryParams?: QueryParams<Partial<Watch>>) => Promise<ResourceList<WatchApi>>;
export declare const watchGetOne: (id: number, queryParams?: QueryParams<Partial<Watch>>) => Promise<WatchApi>;
export declare const watchDeleteOne: (id: number, queryParams?: QueryParams<Partial<Watch>>) => Promise<MessageResponse>;
export declare const watchDeleteMany: (data: (Partial<Watch> & {
    id: number;
})[], queryParams?: QueryParamsWithList<Partial<Watch> & {
    id: number;
}>) => Promise<{
    count: number;
}[]>;
export declare const watchUpdateOne: (id: number, data: Partial<Watch>, queryParams?: QueryParams<Partial<Watch>>) => Promise<Watch>;
export declare const watchUpdateMany: (data: (Partial<Watch> & {
    id: number;
})[], queryParams?: QueryParamsWithList<Partial<Watch> & {
    id: number;
}>) => Promise<Watch[][]>;
export declare const watchCreateOne: (data: Partial<Watch>, queryParams?: QueryParams<Partial<Watch>>) => Promise<Watch>;
export declare const watchCreateMany: (data: Partial<Watch>[], queryParams?: QueryParamsWithList<Partial<Watch>>) => Promise<Watch[][]>;
//# sourceMappingURL=watchService.d.ts.map