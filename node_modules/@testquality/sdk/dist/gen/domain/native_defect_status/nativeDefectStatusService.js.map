{"version":3,"file":"nativeDefectStatusService.js","sourceRoot":"","sources":["../../../../src/gen/domain/native_defect_status/nativeDefectStatusService.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * Copyright (C) 2021 BitModern, Inc - All Rights Reserved\n */\n\nimport { _client } from '../../../ClientSdk';\nimport { getResponse } from '../../actions/getResponse';\nimport { chunkArray } from '../../actions/chunkArray';\nimport type {\n  QueryParams,\n  QueryParamsWithList,\n} from '../../actions/QueryParams';\nimport type { MessageResponse } from '../../actions/MessageResponse';\nimport type { ResourceList } from '../../models/ResourceList';\nimport { NativeDefectStatusRoute } from '../../routes/Routes';\nimport type { NativeDefectStatus } from './NativeDefectStatus';\nimport type { NativeDefectStatusApi } from './NativeDefectStatusApi';\n\nexport const nativeDefectStatusGetMany = (\n  queryParams?: QueryParams<Partial<NativeDefectStatus>>,\n): Promise<ResourceList<NativeDefectStatusApi>> => {\n  const config: QueryParams<Partial<NativeDefectStatus>> = {\n    method: 'get',\n    url: queryParams?.url ?? NativeDefectStatusRoute(),\n    params: queryParams?.params,\n    cancelToken: queryParams?.cancelToken,\n    headers: queryParams?.headers,\n  };\n\n  return queryParams?.batch\n    ? queryParams.batch.addBatch<ResourceList<NativeDefectStatusApi>>(config)\n    : getResponse<\n        ResourceList<NativeDefectStatusApi>,\n        Partial<NativeDefectStatus>\n      >(queryParams?.api ?? _client?.api, config);\n};\n\nexport const nativeDefectStatusGetOne = (\n  id: number,\n  queryParams?: QueryParams<Partial<NativeDefectStatus>>,\n): Promise<NativeDefectStatusApi> => {\n  const config: QueryParams<Partial<NativeDefectStatus>> = {\n    method: 'get',\n    url: `${queryParams?.url ?? NativeDefectStatusRoute()}/${id}`,\n    params: queryParams?.params,\n    cancelToken: queryParams?.cancelToken,\n    headers: queryParams?.headers,\n  };\n\n  return queryParams?.batch\n    ? queryParams.batch.addBatch<NativeDefectStatusApi>(config)\n    : getResponse<NativeDefectStatusApi, Partial<NativeDefectStatus>>(\n        queryParams?.api ?? _client?.api,\n        config,\n      );\n};\n\nexport const nativeDefectStatusDeleteOne = (\n  id: number,\n  queryParams?: QueryParams<Partial<NativeDefectStatus>>,\n): Promise<MessageResponse> => {\n  const config: QueryParams<Partial<NativeDefectStatus>> = {\n    method: 'delete',\n    url: `${queryParams?.url ?? NativeDefectStatusRoute()}/${id}`,\n    params: queryParams?.params,\n    headers: queryParams?.headers,\n  };\n\n  return queryParams?.batch\n    ? queryParams.batch.addBatch<MessageResponse>(config)\n    : getResponse<MessageResponse, Partial<NativeDefectStatus>>(\n        queryParams?.api ?? _client?.api,\n        config,\n      );\n};\n\nexport const nativeDefectStatusDeleteMany = (\n  data: (Partial<NativeDefectStatus> & { id: number })[],\n  queryParams?: QueryParamsWithList<\n    Partial<NativeDefectStatus> & { id: number }\n  >,\n): Promise<{ count: number }[]> => {\n  const chunks = chunkArray(data, 1000);\n  return Promise.all(\n    chunks.map((chunk) => {\n      const config: QueryParamsWithList<\n        Partial<NativeDefectStatus> & { id: number }\n      > = {\n        method: 'post',\n        url: queryParams?.url ?? NativeDefectStatusRoute() + '/delete',\n        params: queryParams?.params,\n        list: chunk,\n        headers: queryParams?.headers,\n      };\n\n      return queryParams?.batch\n        ? queryParams.batch.addBatch<{ count: number }>(config)\n        : getResponse<\n            { count: number },\n            Partial<NativeDefectStatus> & { id: number }\n          >(queryParams?.api ?? _client?.api, config);\n    }),\n  );\n};\n\nexport const nativeDefectStatusUpdateOne = (\n  id: number,\n  data: Partial<NativeDefectStatus>,\n  queryParams?: QueryParams<Partial<NativeDefectStatus>>,\n): Promise<NativeDefectStatus> => {\n  const config: QueryParams<Partial<NativeDefectStatus>> = {\n    method: 'put',\n    url: `${queryParams?.url ?? NativeDefectStatusRoute()}/${id}`,\n    params: queryParams?.params,\n    data,\n    headers: queryParams?.headers,\n  };\n\n  return queryParams?.batch\n    ? queryParams.batch.addBatch<NativeDefectStatus>(config)\n    : getResponse<NativeDefectStatus, Partial<NativeDefectStatus>>(\n        queryParams?.api ?? _client?.api,\n        config,\n      );\n};\n\nexport const nativeDefectStatusUpdateMany = (\n  data: (Partial<NativeDefectStatus> & { id: number })[],\n  queryParams?: QueryParamsWithList<\n    Partial<NativeDefectStatus> & { id: number }\n  >,\n): Promise<NativeDefectStatus[][]> => {\n  const chunks = chunkArray(data, 1000);\n  return Promise.all(\n    chunks.map((chunk) => {\n      const config: QueryParamsWithList<\n        Partial<NativeDefectStatus> & { id: number }\n      > = {\n        method: 'post',\n        url: queryParams?.url ?? NativeDefectStatusRoute(),\n        params: queryParams?.params,\n        list: chunk,\n        headers: queryParams?.headers,\n      };\n\n      return queryParams?.batch\n        ? queryParams.batch.addBatch<NativeDefectStatus[]>(config)\n        : getResponse<\n            NativeDefectStatus[],\n            Partial<NativeDefectStatus> & { id: number }\n          >(queryParams?.api ?? _client?.api, config);\n    }),\n  );\n};\n\nexport const nativeDefectStatusCreateOne = (\n  data: Partial<NativeDefectStatus>,\n  queryParams?: QueryParams<Partial<NativeDefectStatus>>,\n): Promise<NativeDefectStatus> => {\n  const config: QueryParams<Partial<NativeDefectStatus>> = {\n    method: 'post',\n    url: queryParams?.url ?? NativeDefectStatusRoute(),\n    params: queryParams?.params,\n    data,\n    headers: queryParams?.headers,\n  };\n\n  return queryParams?.batch\n    ? queryParams.batch.addBatch<NativeDefectStatus>(config)\n    : getResponse<NativeDefectStatus, Partial<NativeDefectStatus>>(\n        queryParams?.api ?? _client?.api,\n        config,\n      );\n};\n\nexport const nativeDefectStatusCreateMany = (\n  data: Partial<NativeDefectStatus>[],\n  queryParams?: QueryParamsWithList<Partial<NativeDefectStatus>>,\n): Promise<NativeDefectStatus[][]> => {\n  const chunks = chunkArray(data, 1000);\n  return Promise.all(\n    chunks.map((chunk) => {\n      const config: QueryParamsWithList<Partial<NativeDefectStatus>> = {\n        method: 'post',\n        url: queryParams?.url ?? NativeDefectStatusRoute(),\n        params: queryParams?.params,\n        list: chunk,\n        headers: queryParams?.headers,\n      };\n\n      return queryParams?.batch\n        ? queryParams.batch.addBatch<NativeDefectStatus[]>(config)\n        : getResponse<NativeDefectStatus[], Partial<NativeDefectStatus>>(\n            queryParams?.api ?? _client?.api,\n            config,\n          );\n    }),\n  );\n};\n"]}