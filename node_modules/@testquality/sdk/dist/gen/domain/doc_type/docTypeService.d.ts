/**
 * Copyright (C) 2021 BitModern, Inc - All Rights Reserved
 */
import type { QueryParams, QueryParamsWithList } from '../../actions/QueryParams';
import type { MessageResponse } from '../../actions/MessageResponse';
import type { ResourceList } from '../../models/ResourceList';
import type { DocType } from './DocType';
import type { DocTypeApi } from './DocTypeApi';
export declare const docTypeGetMany: (queryParams?: QueryParams<Partial<DocType>>) => Promise<ResourceList<DocTypeApi>>;
export declare const docTypeGetOne: (id: number, queryParams?: QueryParams<Partial<DocType>>) => Promise<DocTypeApi>;
export declare const docTypeDeleteOne: (id: number, queryParams?: QueryParams<Partial<DocType>>) => Promise<MessageResponse>;
export declare const docTypeDeleteMany: (data: (Partial<DocType> & {
    id: number;
})[], queryParams?: QueryParamsWithList<Partial<DocType> & {
    id: number;
}>) => Promise<{
    count: number;
}[]>;
export declare const docTypeUpdateOne: (id: number, data: Partial<DocType>, queryParams?: QueryParams<Partial<DocType>>) => Promise<DocType>;
export declare const docTypeUpdateMany: (data: (Partial<DocType> & {
    id: number;
})[], queryParams?: QueryParamsWithList<Partial<DocType> & {
    id: number;
}>) => Promise<DocType[][]>;
export declare const docTypeCreateOne: (data: Partial<DocType>, queryParams?: QueryParams<Partial<DocType>>) => Promise<DocType>;
export declare const docTypeCreateMany: (data: Partial<DocType>[], queryParams?: QueryParamsWithList<Partial<DocType>>) => Promise<DocType[][]>;
//# sourceMappingURL=docTypeService.d.ts.map