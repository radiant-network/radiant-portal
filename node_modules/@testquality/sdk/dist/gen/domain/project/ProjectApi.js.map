{"version":3,"file":"ProjectApi.js","sourceRoot":"","sources":["../../../../src/gen/domain/project/ProjectApi.ts"],"names":[],"mappings":";AAAA;;GAEG;AACH,oCAAoC;AACpC,0DAA0D","sourcesContent":["/**\n * Copyright (C) 2021 BitModern, Inc - All Rights Reserved\n */\n/* eslint-disable import/no-cycle */\n/* eslint-disable @typescript-eslint/no-empty-interface */\n\nimport type { Project } from './Project';\nimport type { AccessRoleApi } from '../access_role/AccessRoleApi';\nimport type { LabelAssignedApi } from '../label_assigned/LabelAssignedApi';\nimport type { AttachmentApi } from '../attachment/AttachmentApi';\nimport type { ExplorationApi } from '../exploration/ExplorationApi';\nimport type { ExplorationItemApi } from '../exploration_item/ExplorationItemApi';\nimport type { CaseTypeProjectApi } from '../case_type_project/CaseTypeProjectApi';\nimport type { CasePriorityProjectApi } from '../case_priority_project/CasePriorityProjectApi';\nimport type { ProjectPurposeApi } from '../project_purpose/ProjectPurposeApi';\nimport type { ProjectStatusApi } from '../project_status/ProjectStatusApi';\nimport type { EnvironmentProjectApi } from '../environment_project/EnvironmentProjectApi';\nimport type { DocApi } from '../doc/DocApi';\nimport type { ComponentDocApi } from '../component_doc/ComponentDocApi';\nimport type { PlanApi } from '../plan/PlanApi';\nimport type { SuiteApi } from '../suite/SuiteApi';\nimport type { TestApi } from '../test/TestApi';\nimport type { MilestoneApi } from '../milestone/MilestoneApi';\nimport type { StepApi } from '../step/StepApi';\nimport type { RunResultApi } from '../run_result/RunResultApi';\nimport type { RunResultStepApi } from '../run_result_step/RunResultStepApi';\nimport type { RunApi } from '../run/RunApi';\nimport type { IntegrationProjectApi } from '../integration_project/IntegrationProjectApi';\nimport type { IntegrationApi } from '../integration/IntegrationApi';\nimport type { CommentApi } from '../comment/CommentApi';\nimport type { WatchApi } from '../watch/WatchApi';\nimport type { DefectApi } from '../defect/DefectApi';\nimport type { RequirementApi } from '../requirement/RequirementApi';\nimport type { PlanSuiteTestIncludeApi } from '../plan_suite_test_include/PlanSuiteTestIncludeApi';\nimport type { FilterApi } from '../filter/FilterApi';\nimport type { DataSetApi } from '../data_set/DataSetApi';\nimport type { RunSuiteApi } from '../run_suite/RunSuiteApi';\n\nexport interface ProjectApi extends Project {\n  access_role?: AccessRoleApi;\n  label_assigned?: LabelAssignedApi;\n  attachment?: AttachmentApi;\n  exploration?: ExplorationApi[];\n  exploration_item?: ExplorationItemApi[];\n  case_type_project?: CaseTypeProjectApi[];\n  case_priority_project?: CasePriorityProjectApi[];\n  project_purpose?: ProjectPurposeApi[];\n  project_status?: ProjectStatusApi[];\n  environment_project?: EnvironmentProjectApi[];\n  doc?: DocApi[];\n  component_doc?: ComponentDocApi[];\n  plan?: PlanApi[];\n  suite?: SuiteApi[];\n  test?: TestApi[];\n  milestone?: MilestoneApi[];\n  step?: StepApi[];\n  run_result?: RunResultApi[];\n  run_result_step?: RunResultStepApi[];\n  run?: RunApi[];\n  integration?: IntegrationApi[];\n  integration_id?: number;\n  comment?: CommentApi;\n  watch?: WatchApi;\n  defect?: DefectApi[];\n  requirement?: RequirementApi[];\n  plan_suite_test_include?: PlanSuiteTestIncludeApi[];\n  filter?: FilterApi[];\n  data_set?: DataSetApi[];\n  run_suite?: RunSuiteApi[];\n  pivot?: IntegrationProjectApi;\n  integration_project?: Partial<IntegrationProjectApi>;\n}\n"]}