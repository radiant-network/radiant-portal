/**
 * Copyright (C) 2021 BitModern, Inc - All Rights Reserved
 */
import type { QueryParams, QueryParamsWithList } from '../../actions/QueryParams';
import type { MessageResponse } from '../../actions/MessageResponse';
import type { ResourceList } from '../../models/ResourceList';
import type { Project } from './Project';
import type { ProjectApi } from './ProjectApi';
export declare const projectGetMany: (queryParams?: QueryParams<Partial<Project>>) => Promise<ResourceList<ProjectApi>>;
export declare const projectGetOne: (id: number, queryParams?: QueryParams<Partial<Project>>) => Promise<ProjectApi>;
export declare const projectDeleteOne: (id: number, queryParams?: QueryParams<Partial<Project>>) => Promise<MessageResponse>;
export declare const projectDeleteMany: (data: (Partial<Project> & {
    id: number;
})[], queryParams?: QueryParamsWithList<Partial<Project> & {
    id: number;
}>) => Promise<{
    count: number;
}[]>;
export declare const projectUpdateOne: (id: number, data: Partial<Project>, queryParams?: QueryParams<Partial<Project>>) => Promise<Project>;
export declare const projectUpdateMany: (data: (Partial<Project> & {
    id: number;
})[], queryParams?: QueryParamsWithList<Partial<Project> & {
    id: number;
}>) => Promise<Project[][]>;
export declare const projectCreateOne: (data: Partial<Project>, queryParams?: QueryParams<Partial<Project>>) => Promise<Project>;
export declare const projectCreateMany: (data: Partial<Project>[], queryParams?: QueryParamsWithList<Partial<Project>>) => Promise<Project[][]>;
//# sourceMappingURL=projectService.d.ts.map