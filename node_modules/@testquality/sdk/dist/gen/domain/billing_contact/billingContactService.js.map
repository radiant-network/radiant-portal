{"version":3,"file":"billingContactService.js","sourceRoot":"","sources":["../../../../src/gen/domain/billing_contact/billingContactService.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * Copyright (C) 2021 BitModern, Inc - All Rights Reserved\n */\n\nimport { _client } from '../../../ClientSdk';\nimport { getResponse } from '../../actions/getResponse';\nimport { chunkArray } from '../../actions/chunkArray';\nimport type {\n  QueryParams,\n  QueryParamsWithList,\n} from '../../actions/QueryParams';\nimport type { MessageResponse } from '../../actions/MessageResponse';\nimport type { ResourceList } from '../../models/ResourceList';\nimport { BillingContactRoute } from '../../routes/Routes';\nimport type { BillingContact } from './BillingContact';\nimport type { BillingContactApi } from './BillingContactApi';\n\nexport const billingContactGetMany = (\n  queryParams?: QueryParams<Partial<BillingContact>>,\n): Promise<ResourceList<BillingContactApi>> => {\n  const config: QueryParams<Partial<BillingContact>> = {\n    method: 'get',\n    url: queryParams?.url ?? BillingContactRoute(),\n    params: queryParams?.params,\n    cancelToken: queryParams?.cancelToken,\n    headers: queryParams?.headers,\n  };\n\n  return queryParams?.batch\n    ? queryParams.batch.addBatch<ResourceList<BillingContactApi>>(config)\n    : getResponse<ResourceList<BillingContactApi>, Partial<BillingContact>>(\n        queryParams?.api ?? _client?.api,\n        config,\n      );\n};\n\nexport const billingContactGetOne = (\n  id: number,\n  queryParams?: QueryParams<Partial<BillingContact>>,\n): Promise<BillingContactApi> => {\n  const config: QueryParams<Partial<BillingContact>> = {\n    method: 'get',\n    url: `${queryParams?.url ?? BillingContactRoute()}/${id}`,\n    params: queryParams?.params,\n    cancelToken: queryParams?.cancelToken,\n    headers: queryParams?.headers,\n  };\n\n  return queryParams?.batch\n    ? queryParams.batch.addBatch<BillingContactApi>(config)\n    : getResponse<BillingContactApi, Partial<BillingContact>>(\n        queryParams?.api ?? _client?.api,\n        config,\n      );\n};\n\nexport const billingContactDeleteOne = (\n  id: number,\n  queryParams?: QueryParams<Partial<BillingContact>>,\n): Promise<MessageResponse> => {\n  const config: QueryParams<Partial<BillingContact>> = {\n    method: 'delete',\n    url: `${queryParams?.url ?? BillingContactRoute()}/${id}`,\n    params: queryParams?.params,\n    headers: queryParams?.headers,\n  };\n\n  return queryParams?.batch\n    ? queryParams.batch.addBatch<MessageResponse>(config)\n    : getResponse<MessageResponse, Partial<BillingContact>>(\n        queryParams?.api ?? _client?.api,\n        config,\n      );\n};\n\nexport const billingContactDeleteMany = (\n  data: (Partial<BillingContact> & { id: number })[],\n  queryParams?: QueryParamsWithList<Partial<BillingContact> & { id: number }>,\n): Promise<{ count: number }[]> => {\n  const chunks = chunkArray(data, 1000);\n  return Promise.all(\n    chunks.map((chunk) => {\n      const config: QueryParamsWithList<\n        Partial<BillingContact> & { id: number }\n      > = {\n        method: 'post',\n        url: queryParams?.url ?? BillingContactRoute() + '/delete',\n        params: queryParams?.params,\n        list: chunk,\n        headers: queryParams?.headers,\n      };\n\n      return queryParams?.batch\n        ? queryParams.batch.addBatch<{ count: number }>(config)\n        : getResponse<\n            { count: number },\n            Partial<BillingContact> & { id: number }\n          >(queryParams?.api ?? _client?.api, config);\n    }),\n  );\n};\n\nexport const billingContactUpdateOne = (\n  id: number,\n  data: Partial<BillingContact>,\n  queryParams?: QueryParams<Partial<BillingContact>>,\n): Promise<BillingContact> => {\n  const config: QueryParams<Partial<BillingContact>> = {\n    method: 'put',\n    url: `${queryParams?.url ?? BillingContactRoute()}/${id}`,\n    params: queryParams?.params,\n    data,\n    headers: queryParams?.headers,\n  };\n\n  return queryParams?.batch\n    ? queryParams.batch.addBatch<BillingContact>(config)\n    : getResponse<BillingContact, Partial<BillingContact>>(\n        queryParams?.api ?? _client?.api,\n        config,\n      );\n};\n\nexport const billingContactUpdateMany = (\n  data: (Partial<BillingContact> & { id: number })[],\n  queryParams?: QueryParamsWithList<Partial<BillingContact> & { id: number }>,\n): Promise<BillingContact[][]> => {\n  const chunks = chunkArray(data, 1000);\n  return Promise.all(\n    chunks.map((chunk) => {\n      const config: QueryParamsWithList<\n        Partial<BillingContact> & { id: number }\n      > = {\n        method: 'post',\n        url: queryParams?.url ?? BillingContactRoute(),\n        params: queryParams?.params,\n        list: chunk,\n        headers: queryParams?.headers,\n      };\n\n      return queryParams?.batch\n        ? queryParams.batch.addBatch<BillingContact[]>(config)\n        : getResponse<\n            BillingContact[],\n            Partial<BillingContact> & { id: number }\n          >(queryParams?.api ?? _client?.api, config);\n    }),\n  );\n};\n\nexport const billingContactCreateOne = (\n  data: Partial<BillingContact>,\n  queryParams?: QueryParams<Partial<BillingContact>>,\n): Promise<BillingContact> => {\n  const config: QueryParams<Partial<BillingContact>> = {\n    method: 'post',\n    url: queryParams?.url ?? BillingContactRoute(),\n    params: queryParams?.params,\n    data,\n    headers: queryParams?.headers,\n  };\n\n  return queryParams?.batch\n    ? queryParams.batch.addBatch<BillingContact>(config)\n    : getResponse<BillingContact, Partial<BillingContact>>(\n        queryParams?.api ?? _client?.api,\n        config,\n      );\n};\n\nexport const billingContactCreateMany = (\n  data: Partial<BillingContact>[],\n  queryParams?: QueryParamsWithList<Partial<BillingContact>>,\n): Promise<BillingContact[][]> => {\n  const chunks = chunkArray(data, 1000);\n  return Promise.all(\n    chunks.map((chunk) => {\n      const config: QueryParamsWithList<Partial<BillingContact>> = {\n        method: 'post',\n        url: queryParams?.url ?? BillingContactRoute(),\n        params: queryParams?.params,\n        list: chunk,\n        headers: queryParams?.headers,\n      };\n\n      return queryParams?.batch\n        ? queryParams.batch.addBatch<BillingContact[]>(config)\n        : getResponse<BillingContact[], Partial<BillingContact>>(\n            queryParams?.api ?? _client?.api,\n            config,\n          );\n    }),\n  );\n};\n"]}