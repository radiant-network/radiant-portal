"use strict";
/**
 * Copyright (C) 2021 BitModern, Inc - All Rights Reserved
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.commentCreateMany = exports.commentCreateOne = exports.commentUpdateMany = exports.commentUpdateOne = exports.commentDeleteMany = exports.commentDeleteOne = exports.commentGetOne = exports.commentGetMany = void 0;
const ClientSdk_1 = require("../../../ClientSdk");
const getResponse_1 = require("../../actions/getResponse");
const chunkArray_1 = require("../../actions/chunkArray");
const Routes_1 = require("../../routes/Routes");
const commentGetMany = (queryParams) => {
    var _a, _b;
    const config = {
        method: 'get',
        url: (_a = queryParams === null || queryParams === void 0 ? void 0 : queryParams.url) !== null && _a !== void 0 ? _a : (0, Routes_1.CommentRoute)(),
        params: queryParams === null || queryParams === void 0 ? void 0 : queryParams.params,
        cancelToken: queryParams === null || queryParams === void 0 ? void 0 : queryParams.cancelToken,
        headers: queryParams === null || queryParams === void 0 ? void 0 : queryParams.headers,
    };
    return (queryParams === null || queryParams === void 0 ? void 0 : queryParams.batch)
        ? queryParams.batch.addBatch(config)
        : (0, getResponse_1.getResponse)((_b = queryParams === null || queryParams === void 0 ? void 0 : queryParams.api) !== null && _b !== void 0 ? _b : ClientSdk_1._client === null || ClientSdk_1._client === void 0 ? void 0 : ClientSdk_1._client.api, config);
};
exports.commentGetMany = commentGetMany;
const commentGetOne = (id, queryParams) => {
    var _a, _b;
    const config = {
        method: 'get',
        url: `${(_a = queryParams === null || queryParams === void 0 ? void 0 : queryParams.url) !== null && _a !== void 0 ? _a : (0, Routes_1.CommentRoute)()}/${id}`,
        params: queryParams === null || queryParams === void 0 ? void 0 : queryParams.params,
        cancelToken: queryParams === null || queryParams === void 0 ? void 0 : queryParams.cancelToken,
        headers: queryParams === null || queryParams === void 0 ? void 0 : queryParams.headers,
    };
    return (queryParams === null || queryParams === void 0 ? void 0 : queryParams.batch)
        ? queryParams.batch.addBatch(config)
        : (0, getResponse_1.getResponse)((_b = queryParams === null || queryParams === void 0 ? void 0 : queryParams.api) !== null && _b !== void 0 ? _b : ClientSdk_1._client === null || ClientSdk_1._client === void 0 ? void 0 : ClientSdk_1._client.api, config);
};
exports.commentGetOne = commentGetOne;
const commentDeleteOne = (id, queryParams) => {
    var _a, _b;
    const config = {
        method: 'delete',
        url: `${(_a = queryParams === null || queryParams === void 0 ? void 0 : queryParams.url) !== null && _a !== void 0 ? _a : (0, Routes_1.CommentRoute)()}/${id}`,
        params: queryParams === null || queryParams === void 0 ? void 0 : queryParams.params,
        headers: queryParams === null || queryParams === void 0 ? void 0 : queryParams.headers,
    };
    return (queryParams === null || queryParams === void 0 ? void 0 : queryParams.batch)
        ? queryParams.batch.addBatch(config)
        : (0, getResponse_1.getResponse)((_b = queryParams === null || queryParams === void 0 ? void 0 : queryParams.api) !== null && _b !== void 0 ? _b : ClientSdk_1._client === null || ClientSdk_1._client === void 0 ? void 0 : ClientSdk_1._client.api, config);
};
exports.commentDeleteOne = commentDeleteOne;
const commentDeleteMany = (data, queryParams) => {
    const chunks = (0, chunkArray_1.chunkArray)(data, 1000);
    return Promise.all(chunks.map((chunk) => {
        var _a, _b;
        const config = {
            method: 'post',
            url: (_a = queryParams === null || queryParams === void 0 ? void 0 : queryParams.url) !== null && _a !== void 0 ? _a : (0, Routes_1.CommentRoute)() + '/delete',
            params: queryParams === null || queryParams === void 0 ? void 0 : queryParams.params,
            list: chunk,
            headers: queryParams === null || queryParams === void 0 ? void 0 : queryParams.headers,
        };
        return (queryParams === null || queryParams === void 0 ? void 0 : queryParams.batch)
            ? queryParams.batch.addBatch(config)
            : (0, getResponse_1.getResponse)((_b = queryParams === null || queryParams === void 0 ? void 0 : queryParams.api) !== null && _b !== void 0 ? _b : ClientSdk_1._client === null || ClientSdk_1._client === void 0 ? void 0 : ClientSdk_1._client.api, config);
    }));
};
exports.commentDeleteMany = commentDeleteMany;
const commentUpdateOne = (id, data, queryParams) => {
    var _a, _b;
    const config = {
        method: 'put',
        url: `${(_a = queryParams === null || queryParams === void 0 ? void 0 : queryParams.url) !== null && _a !== void 0 ? _a : (0, Routes_1.CommentRoute)()}/${id}`,
        params: queryParams === null || queryParams === void 0 ? void 0 : queryParams.params,
        data,
        headers: queryParams === null || queryParams === void 0 ? void 0 : queryParams.headers,
    };
    return (queryParams === null || queryParams === void 0 ? void 0 : queryParams.batch)
        ? queryParams.batch.addBatch(config)
        : (0, getResponse_1.getResponse)((_b = queryParams === null || queryParams === void 0 ? void 0 : queryParams.api) !== null && _b !== void 0 ? _b : ClientSdk_1._client === null || ClientSdk_1._client === void 0 ? void 0 : ClientSdk_1._client.api, config);
};
exports.commentUpdateOne = commentUpdateOne;
const commentUpdateMany = (data, queryParams) => {
    const chunks = (0, chunkArray_1.chunkArray)(data, 1000);
    return Promise.all(chunks.map((chunk) => {
        var _a, _b;
        const config = {
            method: 'post',
            url: (_a = queryParams === null || queryParams === void 0 ? void 0 : queryParams.url) !== null && _a !== void 0 ? _a : (0, Routes_1.CommentRoute)(),
            params: queryParams === null || queryParams === void 0 ? void 0 : queryParams.params,
            list: chunk,
            headers: queryParams === null || queryParams === void 0 ? void 0 : queryParams.headers,
        };
        return (queryParams === null || queryParams === void 0 ? void 0 : queryParams.batch)
            ? queryParams.batch.addBatch(config)
            : (0, getResponse_1.getResponse)((_b = queryParams === null || queryParams === void 0 ? void 0 : queryParams.api) !== null && _b !== void 0 ? _b : ClientSdk_1._client === null || ClientSdk_1._client === void 0 ? void 0 : ClientSdk_1._client.api, config);
    }));
};
exports.commentUpdateMany = commentUpdateMany;
const commentCreateOne = (data, queryParams) => {
    var _a, _b;
    const config = {
        method: 'post',
        url: (_a = queryParams === null || queryParams === void 0 ? void 0 : queryParams.url) !== null && _a !== void 0 ? _a : (0, Routes_1.CommentRoute)(),
        params: queryParams === null || queryParams === void 0 ? void 0 : queryParams.params,
        data,
        headers: queryParams === null || queryParams === void 0 ? void 0 : queryParams.headers,
    };
    return (queryParams === null || queryParams === void 0 ? void 0 : queryParams.batch)
        ? queryParams.batch.addBatch(config)
        : (0, getResponse_1.getResponse)((_b = queryParams === null || queryParams === void 0 ? void 0 : queryParams.api) !== null && _b !== void 0 ? _b : ClientSdk_1._client === null || ClientSdk_1._client === void 0 ? void 0 : ClientSdk_1._client.api, config);
};
exports.commentCreateOne = commentCreateOne;
const commentCreateMany = (data, queryParams) => {
    const chunks = (0, chunkArray_1.chunkArray)(data, 1000);
    return Promise.all(chunks.map((chunk) => {
        var _a, _b;
        const config = {
            method: 'post',
            url: (_a = queryParams === null || queryParams === void 0 ? void 0 : queryParams.url) !== null && _a !== void 0 ? _a : (0, Routes_1.CommentRoute)(),
            params: queryParams === null || queryParams === void 0 ? void 0 : queryParams.params,
            list: chunk,
            headers: queryParams === null || queryParams === void 0 ? void 0 : queryParams.headers,
        };
        return (queryParams === null || queryParams === void 0 ? void 0 : queryParams.batch)
            ? queryParams.batch.addBatch(config)
            : (0, getResponse_1.getResponse)((_b = queryParams === null || queryParams === void 0 ? void 0 : queryParams.api) !== null && _b !== void 0 ? _b : ClientSdk_1._client === null || ClientSdk_1._client === void 0 ? void 0 : ClientSdk_1._client.api, config);
    }));
};
exports.commentCreateMany = commentCreateMany;
//# sourceMappingURL=commentService.js.map