/**
 * Copyright (C) 2021 BitModern, Inc - All Rights Reserved
 */
import type { QueryParams, QueryParamsWithList } from '../../actions/QueryParams';
import type { MessageResponse } from '../../actions/MessageResponse';
import type { ResourceList } from '../../models/ResourceList';
import type { Integration } from './Integration';
import type { IntegrationApi } from './IntegrationApi';
export declare const integrationGetMany: (queryParams?: QueryParams<Partial<Integration>>) => Promise<ResourceList<IntegrationApi>>;
export declare const integrationGetOne: (id: number, queryParams?: QueryParams<Partial<Integration>>) => Promise<IntegrationApi>;
export declare const integrationDeleteOne: (id: number, queryParams?: QueryParams<Partial<Integration>>) => Promise<MessageResponse>;
export declare const integrationDeleteMany: (data: (Partial<Integration> & {
    id: number;
})[], queryParams?: QueryParamsWithList<Partial<Integration> & {
    id: number;
}>) => Promise<{
    count: number;
}[]>;
export declare const integrationUpdateOne: (id: number, data: Partial<Integration>, queryParams?: QueryParams<Partial<Integration>>) => Promise<Integration>;
export declare const integrationUpdateMany: (data: (Partial<Integration> & {
    id: number;
})[], queryParams?: QueryParamsWithList<Partial<Integration> & {
    id: number;
}>) => Promise<Integration[][]>;
export declare const integrationCreateOne: (data: Partial<Integration>, queryParams?: QueryParams<Partial<Integration>>) => Promise<Integration>;
export declare const integrationCreateMany: (data: Partial<Integration>[], queryParams?: QueryParamsWithList<Partial<Integration>>) => Promise<Integration[][]>;
//# sourceMappingURL=integrationService.d.ts.map