/**
 * Copyright (C) 2021 BitModern, Inc - All Rights Reserved
 */
import type { QueryParams, QueryParamsWithList } from '../../actions/QueryParams';
import type { MessageResponse } from '../../actions/MessageResponse';
import type { ResourceList } from '../../models/ResourceList';
import type { ProjectPurpose } from './ProjectPurpose';
import type { ProjectPurposeApi } from './ProjectPurposeApi';
export declare const projectPurposeDetach: (data: Partial<ProjectPurpose>, queryParams?: QueryParams<Partial<ProjectPurpose>>) => Promise<MessageResponse>;
export declare const projectPurposeDeleteMany: (data: (Partial<ProjectPurpose> & {
    id: number;
})[], queryParams?: QueryParamsWithList<Partial<ProjectPurpose & {
    id: number;
}>>) => Promise<{
    count: number;
}[]>;
export declare const projectPurposeUpdateOne: (id: number, data: Partial<ProjectPurpose>, queryParams?: QueryParams<Partial<ProjectPurpose>>) => Promise<ProjectPurpose>;
export declare const projectPurposeUpdateMany: (data: (Partial<ProjectPurpose> & {
    id: number;
})[], queryParams?: QueryParamsWithList<Partial<ProjectPurpose> & {
    id: number;
}>) => Promise<ProjectPurpose[][]>;
export declare const projectPurposeCreateOne: (data: Partial<ProjectPurpose>, queryParams?: QueryParams<Partial<ProjectPurpose>>) => Promise<ProjectPurpose>;
export declare const projectPurposeCreateMany: (data: Partial<ProjectPurpose>[], queryParams?: QueryParamsWithList<Partial<ProjectPurpose>>) => Promise<ProjectPurpose[][]>;
export declare const projectPurposeGetMany: (queryParams?: QueryParams<Partial<ProjectPurpose>>) => Promise<ResourceList<ProjectPurposeApi>>;
export declare const projectPurposeGetOne: (id: number, queryParams?: QueryParams<Partial<ProjectPurpose>>) => Promise<ProjectPurposeApi>;
//# sourceMappingURL=projectPurposeService.d.ts.map