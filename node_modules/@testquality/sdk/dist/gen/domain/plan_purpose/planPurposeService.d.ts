/**
 * Copyright (C) 2021 BitModern, Inc - All Rights Reserved
 */
import type { QueryParams, QueryParamsWithList } from '../../actions/QueryParams';
import type { MessageResponse } from '../../actions/MessageResponse';
import type { ResourceList } from '../../models/ResourceList';
import type { PlanPurpose } from './PlanPurpose';
import type { PlanPurposeApi } from './PlanPurposeApi';
export declare const planPurposeDetach: (data: Partial<PlanPurpose>, queryParams?: QueryParams<Partial<PlanPurpose>>) => Promise<MessageResponse>;
export declare const planPurposeDeleteMany: (data: (Partial<PlanPurpose> & {
    id: number;
})[], queryParams?: QueryParamsWithList<Partial<PlanPurpose & {
    id: number;
}>>) => Promise<{
    count: number;
}[]>;
export declare const planPurposeUpdateOne: (id: number, data: Partial<PlanPurpose>, queryParams?: QueryParams<Partial<PlanPurpose>>) => Promise<PlanPurpose>;
export declare const planPurposeUpdateMany: (data: (Partial<PlanPurpose> & {
    id: number;
})[], queryParams?: QueryParamsWithList<Partial<PlanPurpose> & {
    id: number;
}>) => Promise<PlanPurpose[][]>;
export declare const planPurposeCreateOne: (data: Partial<PlanPurpose>, queryParams?: QueryParams<Partial<PlanPurpose>>) => Promise<PlanPurpose>;
export declare const planPurposeCreateMany: (data: Partial<PlanPurpose>[], queryParams?: QueryParamsWithList<Partial<PlanPurpose>>) => Promise<PlanPurpose[][]>;
export declare const planPurposeGetMany: (queryParams?: QueryParams<Partial<PlanPurpose>>) => Promise<ResourceList<PlanPurposeApi>>;
export declare const planPurposeGetOne: (id: number, queryParams?: QueryParams<Partial<PlanPurpose>>) => Promise<PlanPurposeApi>;
//# sourceMappingURL=planPurposeService.d.ts.map