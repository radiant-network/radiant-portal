/**
 * Copyright (C) 2021 BitModern, Inc - All Rights Reserved
 */
import type { QueryParams, QueryParamsWithList } from '../../actions/QueryParams';
import type { MessageResponse } from '../../actions/MessageResponse';
import type { ResourceList } from '../../models/ResourceList';
import type { IntegrationUser } from './IntegrationUser';
import type { IntegrationUserApi } from './IntegrationUserApi';
export declare const integrationUserDetach: (data: Partial<IntegrationUser>, queryParams?: QueryParams<Partial<IntegrationUser>>) => Promise<MessageResponse>;
export declare const integrationUserDeleteMany: (data: (Partial<IntegrationUser> & {
    id: number;
})[], queryParams?: QueryParamsWithList<Partial<IntegrationUser & {
    id: number;
}>>) => Promise<{
    count: number;
}[]>;
export declare const integrationUserUpdateOne: (id: number, data: Partial<IntegrationUser>, queryParams?: QueryParams<Partial<IntegrationUser>>) => Promise<IntegrationUser>;
export declare const integrationUserUpdateMany: (data: (Partial<IntegrationUser> & {
    id: number;
})[], queryParams?: QueryParamsWithList<Partial<IntegrationUser> & {
    id: number;
}>) => Promise<IntegrationUser[][]>;
export declare const integrationUserCreateOne: (data: Partial<IntegrationUser>, queryParams?: QueryParams<Partial<IntegrationUser>>) => Promise<IntegrationUser>;
export declare const integrationUserCreateMany: (data: Partial<IntegrationUser>[], queryParams?: QueryParamsWithList<Partial<IntegrationUser>>) => Promise<IntegrationUser[][]>;
export declare const integrationUserGetMany: (queryParams?: QueryParams<Partial<IntegrationUser>>) => Promise<ResourceList<IntegrationUserApi>>;
export declare const integrationUserGetOne: (id: number, queryParams?: QueryParams<Partial<IntegrationUser>>) => Promise<IntegrationUserApi>;
//# sourceMappingURL=integrationUserService.d.ts.map