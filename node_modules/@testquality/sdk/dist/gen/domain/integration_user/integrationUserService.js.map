{"version":3,"file":"integrationUserService.js","sourceRoot":"","sources":["../../../../src/gen/domain/integration_user/integrationUserService.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * Copyright (C) 2021 BitModern, Inc - All Rights Reserved\n */\n\nimport { _client } from '../../../ClientSdk';\nimport { getResponse } from '../../actions/getResponse';\nimport { chunkArray } from '../../actions/chunkArray';\nimport type {\n  QueryParams,\n  QueryParamsWithList,\n} from '../../actions/QueryParams';\nimport type { MessageResponse } from '../../actions/MessageResponse';\nimport type { ResourceList } from '../../models/ResourceList';\nimport type { IntegrationUser } from './IntegrationUser';\nimport type { IntegrationUserApi } from './IntegrationUserApi';\n\nexport const integrationUserDetach = (\n  data: Partial<IntegrationUser>,\n  queryParams?: QueryParams<Partial<IntegrationUser>>,\n): Promise<MessageResponse> => {\n  if (data.id === undefined) {\n    return Promise.reject(new Error('Must supply id'));\n  }\n  const config: QueryParams<Partial<IntegrationUser>> = {\n    method: 'delete',\n    url: `/integration_user/${data.id}`,\n    params: queryParams?.params,\n  };\n\n  return queryParams?.batch\n    ? queryParams.batch.addBatch<MessageResponse>(config)\n    : getResponse<MessageResponse, Partial<IntegrationUser>>(\n        queryParams?.api ?? _client?.api,\n        config,\n      );\n};\n\nexport const integrationUserDeleteMany = (\n  data: (Partial<IntegrationUser> & { id: number })[],\n  queryParams?: QueryParamsWithList<Partial<IntegrationUser & { id: number }>>,\n): Promise<{ count: number }[]> => {\n  const chunks = chunkArray(data, 1000);\n  return Promise.all(\n    chunks.map((chunk) => {\n      const config: QueryParamsWithList<\n        Partial<IntegrationUser> & { id: number }\n      > = {\n        method: 'post',\n        url: `/integration_user/delete`,\n        params: queryParams?.params,\n        list: chunk,\n        headers: queryParams?.headers,\n      };\n\n      return queryParams?.batch\n        ? queryParams.batch.addBatch<{ count: number }>(config)\n        : getResponse<\n            { count: number },\n            Partial<IntegrationUser> & { id: number }\n          >(queryParams?.api ?? _client?.api, config);\n    }),\n  );\n};\n\nexport const integrationUserUpdateOne = (\n  id: number,\n  data: Partial<IntegrationUser>,\n  queryParams?: QueryParams<Partial<IntegrationUser>>,\n): Promise<IntegrationUser> => {\n  const config: QueryParams<Partial<IntegrationUser>> = {\n    method: 'put',\n    url: `/integration_user/${id}`,\n    params: queryParams?.params,\n    data,\n  };\n\n  return queryParams?.batch\n    ? queryParams.batch.addBatch<IntegrationUser>(config)\n    : getResponse<IntegrationUser, Partial<IntegrationUser>>(\n        queryParams?.api ?? _client?.api,\n        config,\n      );\n};\n\nexport const integrationUserUpdateMany = (\n  data: (Partial<IntegrationUser> & { id: number })[],\n  queryParams?: QueryParamsWithList<Partial<IntegrationUser> & { id: number }>,\n): Promise<IntegrationUser[][]> => {\n  const chunks = chunkArray(data, 1000);\n  return Promise.all(\n    chunks.map((chunk) => {\n      const config: QueryParamsWithList<\n        Partial<IntegrationUser> & { id: number }\n      > = {\n        method: 'post',\n        url: queryParams?.url ?? `/integration_user`,\n        params: queryParams?.params,\n        list: chunk,\n      };\n\n      return queryParams?.batch\n        ? queryParams.batch.addBatch<IntegrationUser[]>(config)\n        : getResponse<\n            IntegrationUser[],\n            Partial<IntegrationUser> & { id: number }\n          >(queryParams?.api ?? _client?.api, config);\n    }),\n  );\n};\n\nexport const integrationUserCreateOne = (\n  data: Partial<IntegrationUser>,\n  queryParams?: QueryParams<Partial<IntegrationUser>>,\n): Promise<IntegrationUser> => {\n  const config: QueryParams<Partial<IntegrationUser>> = {\n    method: 'post',\n    url: queryParams?.url ?? `/integration_user`,\n    params: queryParams?.params,\n    data,\n  };\n\n  return queryParams?.batch\n    ? queryParams.batch.addBatch<IntegrationUser>(config)\n    : getResponse<IntegrationUser, Partial<IntegrationUser>>(\n        queryParams?.api ?? _client?.api,\n        config,\n      );\n};\n\nexport const integrationUserCreateMany = (\n  data: Partial<IntegrationUser>[],\n  queryParams?: QueryParamsWithList<Partial<IntegrationUser>>,\n): Promise<IntegrationUser[][]> => {\n  const chunks = chunkArray(data, 1000);\n  return Promise.all(\n    chunks.map((chunk) => {\n      const config: QueryParamsWithList<Partial<IntegrationUser>> = {\n        method: 'post',\n        url: queryParams?.url ?? `/integration_user`,\n        params: queryParams?.params,\n        list: chunk,\n      };\n\n      return queryParams?.batch\n        ? queryParams.batch.addBatch<IntegrationUser[]>(config)\n        : getResponse<IntegrationUser[], Partial<IntegrationUser>>(\n            queryParams?.api ?? _client?.api,\n            config,\n          );\n    }),\n  );\n};\n\nexport const integrationUserGetMany = (\n  queryParams?: QueryParams<Partial<IntegrationUser>>,\n): Promise<ResourceList<IntegrationUserApi>> => {\n  const config: QueryParams<Partial<IntegrationUser>> = {\n    method: 'get',\n    url: queryParams?.url ?? `/integration_user`,\n    params: queryParams?.params,\n    cancelToken: queryParams?.cancelToken,\n  };\n\n  return queryParams?.batch\n    ? queryParams.batch.addBatch<ResourceList<IntegrationUserApi>>(config)\n    : getResponse<ResourceList<IntegrationUserApi>, Partial<IntegrationUser>>(\n        queryParams?.api ?? _client?.api,\n        config,\n      );\n};\n\nexport const integrationUserGetOne = (\n  id: number,\n  queryParams?: QueryParams<Partial<IntegrationUser>>,\n): Promise<IntegrationUserApi> => {\n  const config: QueryParams<Partial<IntegrationUser>> = {\n    method: 'get',\n    url: `${queryParams?.url ?? `/integration_user/${id}`}`,\n    params: queryParams?.params,\n    cancelToken: queryParams?.cancelToken,\n  };\n\n  return queryParams?.batch\n    ? queryParams.batch.addBatch<IntegrationUserApi>(config)\n    : getResponse<IntegrationUserApi, Partial<IntegrationUser>>(\n        queryParams?.api ?? _client?.api,\n        config,\n      );\n};\n"]}