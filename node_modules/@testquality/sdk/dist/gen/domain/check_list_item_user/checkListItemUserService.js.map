{"version":3,"file":"checkListItemUserService.js","sourceRoot":"","sources":["../../../../src/gen/domain/check_list_item_user/checkListItemUserService.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * Copyright (C) 2021 BitModern, Inc - All Rights Reserved\n */\n\nimport { _client } from '../../../ClientSdk';\nimport { getResponse } from '../../actions/getResponse';\nimport { chunkArray } from '../../actions/chunkArray';\nimport type {\n  QueryParams,\n  QueryParamsWithList,\n} from '../../actions/QueryParams';\nimport type { MessageResponse } from '../../actions/MessageResponse';\nimport type { ResourceList } from '../../models/ResourceList';\nimport type { CheckListItemUser } from './CheckListItemUser';\nimport type { CheckListItemUserApi } from './CheckListItemUserApi';\n\nexport const checkListItemUserDetach = (\n  data: Partial<CheckListItemUser>,\n  queryParams?: QueryParams<Partial<CheckListItemUser>>,\n): Promise<MessageResponse> => {\n  if (data.id === undefined) {\n    return Promise.reject(new Error('Must supply id'));\n  }\n  const config: QueryParams<Partial<CheckListItemUser>> = {\n    method: 'delete',\n    url: `/check_list_item_user/${data.id}`,\n    params: queryParams?.params,\n  };\n\n  return queryParams?.batch\n    ? queryParams.batch.addBatch<MessageResponse>(config)\n    : getResponse<MessageResponse, Partial<CheckListItemUser>>(\n        queryParams?.api ?? _client?.api,\n        config,\n      );\n};\n\nexport const checkListItemUserDeleteMany = (\n  data: (Partial<CheckListItemUser> & { id: number })[],\n  queryParams?: QueryParamsWithList<\n    Partial<CheckListItemUser & { id: number }>\n  >,\n): Promise<{ count: number }[]> => {\n  const chunks = chunkArray(data, 1000);\n  return Promise.all(\n    chunks.map((chunk) => {\n      const config: QueryParamsWithList<\n        Partial<CheckListItemUser> & { id: number }\n      > = {\n        method: 'post',\n        url: `/check_list_item_user/delete`,\n        params: queryParams?.params,\n        list: chunk,\n        headers: queryParams?.headers,\n      };\n\n      return queryParams?.batch\n        ? queryParams.batch.addBatch<{ count: number }>(config)\n        : getResponse<\n            { count: number },\n            Partial<CheckListItemUser> & { id: number }\n          >(queryParams?.api ?? _client?.api, config);\n    }),\n  );\n};\n\nexport const checkListItemUserUpdateOne = (\n  id: number,\n  data: Partial<CheckListItemUser>,\n  queryParams?: QueryParams<Partial<CheckListItemUser>>,\n): Promise<CheckListItemUser> => {\n  const config: QueryParams<Partial<CheckListItemUser>> = {\n    method: 'put',\n    url: `/check_list_item_user/${id}`,\n    params: queryParams?.params,\n    data,\n  };\n\n  return queryParams?.batch\n    ? queryParams.batch.addBatch<CheckListItemUser>(config)\n    : getResponse<CheckListItemUser, Partial<CheckListItemUser>>(\n        queryParams?.api ?? _client?.api,\n        config,\n      );\n};\n\nexport const checkListItemUserUpdateMany = (\n  data: (Partial<CheckListItemUser> & { id: number })[],\n  queryParams?: QueryParamsWithList<\n    Partial<CheckListItemUser> & { id: number }\n  >,\n): Promise<CheckListItemUser[][]> => {\n  const chunks = chunkArray(data, 1000);\n  return Promise.all(\n    chunks.map((chunk) => {\n      const config: QueryParamsWithList<\n        Partial<CheckListItemUser> & { id: number }\n      > = {\n        method: 'post',\n        url: queryParams?.url ?? `/check_list_item_user`,\n        params: queryParams?.params,\n        list: chunk,\n      };\n\n      return queryParams?.batch\n        ? queryParams.batch.addBatch<CheckListItemUser[]>(config)\n        : getResponse<\n            CheckListItemUser[],\n            Partial<CheckListItemUser> & { id: number }\n          >(queryParams?.api ?? _client?.api, config);\n    }),\n  );\n};\n\nexport const checkListItemUserCreateOne = (\n  data: Partial<CheckListItemUser>,\n  queryParams?: QueryParams<Partial<CheckListItemUser>>,\n): Promise<CheckListItemUser> => {\n  const config: QueryParams<Partial<CheckListItemUser>> = {\n    method: 'post',\n    url: queryParams?.url ?? `/check_list_item_user`,\n    params: queryParams?.params,\n    data,\n  };\n\n  return queryParams?.batch\n    ? queryParams.batch.addBatch<CheckListItemUser>(config)\n    : getResponse<CheckListItemUser, Partial<CheckListItemUser>>(\n        queryParams?.api ?? _client?.api,\n        config,\n      );\n};\n\nexport const checkListItemUserCreateMany = (\n  data: Partial<CheckListItemUser>[],\n  queryParams?: QueryParamsWithList<Partial<CheckListItemUser>>,\n): Promise<CheckListItemUser[][]> => {\n  const chunks = chunkArray(data, 1000);\n  return Promise.all(\n    chunks.map((chunk) => {\n      const config: QueryParamsWithList<Partial<CheckListItemUser>> = {\n        method: 'post',\n        url: queryParams?.url ?? `/check_list_item_user`,\n        params: queryParams?.params,\n        list: chunk,\n      };\n\n      return queryParams?.batch\n        ? queryParams.batch.addBatch<CheckListItemUser[]>(config)\n        : getResponse<CheckListItemUser[], Partial<CheckListItemUser>>(\n            queryParams?.api ?? _client?.api,\n            config,\n          );\n    }),\n  );\n};\n\nexport const checkListItemUserGetMany = (\n  queryParams?: QueryParams<Partial<CheckListItemUser>>,\n): Promise<ResourceList<CheckListItemUserApi>> => {\n  const config: QueryParams<Partial<CheckListItemUser>> = {\n    method: 'get',\n    url: queryParams?.url ?? `/check_list_item_user`,\n    params: queryParams?.params,\n    cancelToken: queryParams?.cancelToken,\n  };\n\n  return queryParams?.batch\n    ? queryParams.batch.addBatch<ResourceList<CheckListItemUserApi>>(config)\n    : getResponse<\n        ResourceList<CheckListItemUserApi>,\n        Partial<CheckListItemUser>\n      >(queryParams?.api ?? _client?.api, config);\n};\n\nexport const checkListItemUserGetOne = (\n  id: number,\n  queryParams?: QueryParams<Partial<CheckListItemUser>>,\n): Promise<CheckListItemUserApi> => {\n  const config: QueryParams<Partial<CheckListItemUser>> = {\n    method: 'get',\n    url: `${queryParams?.url ?? `/check_list_item_user/${id}`}`,\n    params: queryParams?.params,\n    cancelToken: queryParams?.cancelToken,\n  };\n\n  return queryParams?.batch\n    ? queryParams.batch.addBatch<CheckListItemUserApi>(config)\n    : getResponse<CheckListItemUserApi, Partial<CheckListItemUser>>(\n        queryParams?.api ?? _client?.api,\n        config,\n      );\n};\n"]}