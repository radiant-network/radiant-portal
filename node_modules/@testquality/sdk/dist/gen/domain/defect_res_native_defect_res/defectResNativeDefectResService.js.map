{"version":3,"file":"defectResNativeDefectResService.js","sourceRoot":"","sources":["../../../../src/gen/domain/defect_res_native_defect_res/defectResNativeDefectResService.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * Copyright (C) 2021 BitModern, Inc - All Rights Reserved\n */\n\nimport { _client } from '../../../ClientSdk';\nimport { getResponse } from '../../actions/getResponse';\nimport { chunkArray } from '../../actions/chunkArray';\nimport type {\n  QueryParams,\n  QueryParamsWithList,\n} from '../../actions/QueryParams';\nimport type { MessageResponse } from '../../actions/MessageResponse';\nimport type { ResourceList } from '../../models/ResourceList';\nimport type { DefectResNativeDefectRes } from './DefectResNativeDefectRes';\nimport type { DefectResNativeDefectResApi } from './DefectResNativeDefectResApi';\n\nexport const defectResNativeDefectResDetach = (\n  data: Partial<DefectResNativeDefectRes>,\n  queryParams?: QueryParams<Partial<DefectResNativeDefectRes>>,\n): Promise<MessageResponse> => {\n  if (data.id === undefined) {\n    return Promise.reject(new Error('Must supply id'));\n  }\n  const config: QueryParams<Partial<DefectResNativeDefectRes>> = {\n    method: 'delete',\n    url: `/defect_res_native_defect_res/${data.id}`,\n    params: queryParams?.params,\n  };\n\n  return queryParams?.batch\n    ? queryParams.batch.addBatch<MessageResponse>(config)\n    : getResponse<MessageResponse, Partial<DefectResNativeDefectRes>>(\n        queryParams?.api ?? _client?.api,\n        config,\n      );\n};\n\nexport const defectResNativeDefectResDeleteMany = (\n  data: (Partial<DefectResNativeDefectRes> & { id: number })[],\n  queryParams?: QueryParamsWithList<\n    Partial<DefectResNativeDefectRes & { id: number }>\n  >,\n): Promise<{ count: number }[]> => {\n  const chunks = chunkArray(data, 1000);\n  return Promise.all(\n    chunks.map((chunk) => {\n      const config: QueryParamsWithList<\n        Partial<DefectResNativeDefectRes> & { id: number }\n      > = {\n        method: 'post',\n        url: `/defect_res_native_defect_res/delete`,\n        params: queryParams?.params,\n        list: chunk,\n        headers: queryParams?.headers,\n      };\n\n      return queryParams?.batch\n        ? queryParams.batch.addBatch<{ count: number }>(config)\n        : getResponse<\n            { count: number },\n            Partial<DefectResNativeDefectRes> & { id: number }\n          >(queryParams?.api ?? _client?.api, config);\n    }),\n  );\n};\n\nexport const defectResNativeDefectResUpdateOne = (\n  id: number,\n  data: Partial<DefectResNativeDefectRes>,\n  queryParams?: QueryParams<Partial<DefectResNativeDefectRes>>,\n): Promise<DefectResNativeDefectRes> => {\n  const config: QueryParams<Partial<DefectResNativeDefectRes>> = {\n    method: 'put',\n    url: `/defect_res_native_defect_res/${id}`,\n    params: queryParams?.params,\n    data,\n  };\n\n  return queryParams?.batch\n    ? queryParams.batch.addBatch<DefectResNativeDefectRes>(config)\n    : getResponse<DefectResNativeDefectRes, Partial<DefectResNativeDefectRes>>(\n        queryParams?.api ?? _client?.api,\n        config,\n      );\n};\n\nexport const defectResNativeDefectResUpdateMany = (\n  data: (Partial<DefectResNativeDefectRes> & { id: number })[],\n  queryParams?: QueryParamsWithList<\n    Partial<DefectResNativeDefectRes> & { id: number }\n  >,\n): Promise<DefectResNativeDefectRes[][]> => {\n  const chunks = chunkArray(data, 1000);\n  return Promise.all(\n    chunks.map((chunk) => {\n      const config: QueryParamsWithList<\n        Partial<DefectResNativeDefectRes> & { id: number }\n      > = {\n        method: 'post',\n        url: queryParams?.url ?? `/defect_res_native_defect_res`,\n        params: queryParams?.params,\n        list: chunk,\n      };\n\n      return queryParams?.batch\n        ? queryParams.batch.addBatch<DefectResNativeDefectRes[]>(config)\n        : getResponse<\n            DefectResNativeDefectRes[],\n            Partial<DefectResNativeDefectRes> & { id: number }\n          >(queryParams?.api ?? _client?.api, config);\n    }),\n  );\n};\n\nexport const defectResNativeDefectResCreateOne = (\n  data: Partial<DefectResNativeDefectRes>,\n  queryParams?: QueryParams<Partial<DefectResNativeDefectRes>>,\n): Promise<DefectResNativeDefectRes> => {\n  const config: QueryParams<Partial<DefectResNativeDefectRes>> = {\n    method: 'post',\n    url: queryParams?.url ?? `/defect_res_native_defect_res`,\n    params: queryParams?.params,\n    data,\n  };\n\n  return queryParams?.batch\n    ? queryParams.batch.addBatch<DefectResNativeDefectRes>(config)\n    : getResponse<DefectResNativeDefectRes, Partial<DefectResNativeDefectRes>>(\n        queryParams?.api ?? _client?.api,\n        config,\n      );\n};\n\nexport const defectResNativeDefectResCreateMany = (\n  data: Partial<DefectResNativeDefectRes>[],\n  queryParams?: QueryParamsWithList<Partial<DefectResNativeDefectRes>>,\n): Promise<DefectResNativeDefectRes[][]> => {\n  const chunks = chunkArray(data, 1000);\n  return Promise.all(\n    chunks.map((chunk) => {\n      const config: QueryParamsWithList<Partial<DefectResNativeDefectRes>> = {\n        method: 'post',\n        url: queryParams?.url ?? `/defect_res_native_defect_res`,\n        params: queryParams?.params,\n        list: chunk,\n      };\n\n      return queryParams?.batch\n        ? queryParams.batch.addBatch<DefectResNativeDefectRes[]>(config)\n        : getResponse<\n            DefectResNativeDefectRes[],\n            Partial<DefectResNativeDefectRes>\n          >(queryParams?.api ?? _client?.api, config);\n    }),\n  );\n};\n\nexport const defectResNativeDefectResGetMany = (\n  queryParams?: QueryParams<Partial<DefectResNativeDefectRes>>,\n): Promise<ResourceList<DefectResNativeDefectResApi>> => {\n  const config: QueryParams<Partial<DefectResNativeDefectRes>> = {\n    method: 'get',\n    url: queryParams?.url ?? `/defect_res_native_defect_res`,\n    params: queryParams?.params,\n    cancelToken: queryParams?.cancelToken,\n  };\n\n  return queryParams?.batch\n    ? queryParams.batch.addBatch<ResourceList<DefectResNativeDefectResApi>>(\n        config,\n      )\n    : getResponse<\n        ResourceList<DefectResNativeDefectResApi>,\n        Partial<DefectResNativeDefectRes>\n      >(queryParams?.api ?? _client?.api, config);\n};\n\nexport const defectResNativeDefectResGetOne = (\n  id: number,\n  queryParams?: QueryParams<Partial<DefectResNativeDefectRes>>,\n): Promise<DefectResNativeDefectResApi> => {\n  const config: QueryParams<Partial<DefectResNativeDefectRes>> = {\n    method: 'get',\n    url: `${queryParams?.url ?? `/defect_res_native_defect_res/${id}`}`,\n    params: queryParams?.params,\n    cancelToken: queryParams?.cancelToken,\n  };\n\n  return queryParams?.batch\n    ? queryParams.batch.addBatch<DefectResNativeDefectResApi>(config)\n    : getResponse<\n        DefectResNativeDefectResApi,\n        Partial<DefectResNativeDefectRes>\n      >(queryParams?.api ?? _client?.api, config);\n};\n"]}