{"version":3,"file":"shareUserService.js","sourceRoot":"","sources":["../../../../src/gen/domain/share_user/shareUserService.ts"],"names":[],"mappings":";AAAA;;GAEG;;;AAEH,kDAA6C;AAC7C,2DAAwD;AACxD,yDAAsD;AAU/C,MAAM,eAAe,GAAG,CAC7B,IAAwB,EACxB,WAA6C,EACnB,EAAE;;IAC5B,IAAI,IAAI,CAAC,EAAE,KAAK,SAAS,EAAE;QACzB,OAAO,OAAO,CAAC,MAAM,CAAC,IAAI,KAAK,CAAC,gBAAgB,CAAC,CAAC,CAAC;KACpD;IACD,MAAM,MAAM,GAAoC;QAC9C,MAAM,EAAE,QAAQ;QAChB,GAAG,EAAE,eAAe,IAAI,CAAC,EAAE,EAAE;QAC7B,MAAM,EAAE,WAAW,aAAX,WAAW,uBAAX,WAAW,CAAE,MAAM;KAC5B,CAAC;IAEF,OAAO,CAAA,WAAW,aAAX,WAAW,uBAAX,WAAW,CAAE,KAAK;QACvB,CAAC,CAAC,WAAW,CAAC,KAAK,CAAC,QAAQ,CAAkB,MAAM,CAAC;QACrD,CAAC,CAAC,IAAA,yBAAW,EACT,MAAA,WAAW,aAAX,WAAW,uBAAX,WAAW,CAAE,GAAG,mCAAI,mBAAO,aAAP,mBAAO,uBAAP,mBAAO,CAAE,GAAG,EAChC,MAAM,CACP,CAAC;AACR,CAAC,CAAC;AAnBW,QAAA,eAAe,mBAmB1B;AAEK,MAAM,mBAAmB,GAAG,CACjC,IAA6C,EAC7C,WAAsE,EACxC,EAAE;IAChC,MAAM,MAAM,GAAG,IAAA,uBAAU,EAAC,IAAI,EAAE,IAAI,CAAC,CAAC;IACtC,OAAO,OAAO,CAAC,GAAG,CAChB,MAAM,CAAC,GAAG,CAAC,CAAC,KAAK,EAAE,EAAE;;QACnB,MAAM,MAAM,GAA6D;YACvE,MAAM,EAAE,MAAM;YACd,GAAG,EAAE,oBAAoB;YACzB,MAAM,EAAE,WAAW,aAAX,WAAW,uBAAX,WAAW,CAAE,MAAM;YAC3B,IAAI,EAAE,KAAK;YACX,OAAO,EAAE,WAAW,aAAX,WAAW,uBAAX,WAAW,CAAE,OAAO;SAC9B,CAAC;QAEF,OAAO,CAAA,WAAW,aAAX,WAAW,uBAAX,WAAW,CAAE,KAAK;YACvB,CAAC,CAAC,WAAW,CAAC,KAAK,CAAC,QAAQ,CAAoB,MAAM,CAAC;YACvD,CAAC,CAAC,IAAA,yBAAW,EACT,MAAA,WAAW,aAAX,WAAW,uBAAX,WAAW,CAAE,GAAG,mCAAI,mBAAO,aAAP,mBAAO,uBAAP,mBAAO,CAAE,GAAG,EAChC,MAAM,CACP,CAAC;IACR,CAAC,CAAC,CACH,CAAC;AACJ,CAAC,CAAC;AAvBW,QAAA,mBAAmB,uBAuB9B;AAEK,MAAM,kBAAkB,GAAG,CAChC,EAAU,EACV,IAAwB,EACxB,WAA6C,EACzB,EAAE;;IACtB,MAAM,MAAM,GAAoC;QAC9C,MAAM,EAAE,KAAK;QACb,GAAG,EAAE,eAAe,EAAE,EAAE;QACxB,MAAM,EAAE,WAAW,aAAX,WAAW,uBAAX,WAAW,CAAE,MAAM;QAC3B,IAAI;KACL,CAAC;IAEF,OAAO,CAAA,WAAW,aAAX,WAAW,uBAAX,WAAW,CAAE,KAAK;QACvB,CAAC,CAAC,WAAW,CAAC,KAAK,CAAC,QAAQ,CAAY,MAAM,CAAC;QAC/C,CAAC,CAAC,IAAA,yBAAW,EACT,MAAA,WAAW,aAAX,WAAW,uBAAX,WAAW,CAAE,GAAG,mCAAI,mBAAO,aAAP,mBAAO,uBAAP,mBAAO,CAAE,GAAG,EAChC,MAAM,CACP,CAAC;AACR,CAAC,CAAC;AAlBW,QAAA,kBAAkB,sBAkB7B;AAEK,MAAM,mBAAmB,GAAG,CACjC,IAA6C,EAC7C,WAAsE,EAC9C,EAAE;IAC1B,MAAM,MAAM,GAAG,IAAA,uBAAU,EAAC,IAAI,EAAE,IAAI,CAAC,CAAC;IACtC,OAAO,OAAO,CAAC,GAAG,CAChB,MAAM,CAAC,GAAG,CAAC,CAAC,KAAK,EAAE,EAAE;;QACnB,MAAM,MAAM,GAA6D;YACvE,MAAM,EAAE,MAAM;YACd,GAAG,EAAE,MAAA,WAAW,aAAX,WAAW,uBAAX,WAAW,CAAE,GAAG,mCAAI,aAAa;YACtC,MAAM,EAAE,WAAW,aAAX,WAAW,uBAAX,WAAW,CAAE,MAAM;YAC3B,IAAI,EAAE,KAAK;SACZ,CAAC;QAEF,OAAO,CAAA,WAAW,aAAX,WAAW,uBAAX,WAAW,CAAE,KAAK;YACvB,CAAC,CAAC,WAAW,CAAC,KAAK,CAAC,QAAQ,CAAc,MAAM,CAAC;YACjD,CAAC,CAAC,IAAA,yBAAW,EACT,MAAA,WAAW,aAAX,WAAW,uBAAX,WAAW,CAAE,GAAG,mCAAI,mBAAO,aAAP,mBAAO,uBAAP,mBAAO,CAAE,GAAG,EAChC,MAAM,CACP,CAAC;IACR,CAAC,CAAC,CACH,CAAC;AACJ,CAAC,CAAC;AAtBW,QAAA,mBAAmB,uBAsB9B;AAEK,MAAM,kBAAkB,GAAG,CAChC,IAAwB,EACxB,WAA6C,EACzB,EAAE;;IACtB,MAAM,MAAM,GAAoC;QAC9C,MAAM,EAAE,MAAM;QACd,GAAG,EAAE,MAAA,WAAW,aAAX,WAAW,uBAAX,WAAW,CAAE,GAAG,mCAAI,aAAa;QACtC,MAAM,EAAE,WAAW,aAAX,WAAW,uBAAX,WAAW,CAAE,MAAM;QAC3B,IAAI;KACL,CAAC;IAEF,OAAO,CAAA,WAAW,aAAX,WAAW,uBAAX,WAAW,CAAE,KAAK;QACvB,CAAC,CAAC,WAAW,CAAC,KAAK,CAAC,QAAQ,CAAY,MAAM,CAAC;QAC/C,CAAC,CAAC,IAAA,yBAAW,EACT,MAAA,WAAW,aAAX,WAAW,uBAAX,WAAW,CAAE,GAAG,mCAAI,mBAAO,aAAP,mBAAO,uBAAP,mBAAO,CAAE,GAAG,EAChC,MAAM,CACP,CAAC;AACR,CAAC,CAAC;AAjBW,QAAA,kBAAkB,sBAiB7B;AAEK,MAAM,mBAAmB,GAAG,CACjC,IAA0B,EAC1B,WAAqD,EAC7B,EAAE;IAC1B,MAAM,MAAM,GAAG,IAAA,uBAAU,EAAC,IAAI,EAAE,IAAI,CAAC,CAAC;IACtC,OAAO,OAAO,CAAC,GAAG,CAChB,MAAM,CAAC,GAAG,CAAC,CAAC,KAAK,EAAE,EAAE;;QACnB,MAAM,MAAM,GAA4C;YACtD,MAAM,EAAE,MAAM;YACd,GAAG,EAAE,MAAA,WAAW,aAAX,WAAW,uBAAX,WAAW,CAAE,GAAG,mCAAI,aAAa;YACtC,MAAM,EAAE,WAAW,aAAX,WAAW,uBAAX,WAAW,CAAE,MAAM;YAC3B,IAAI,EAAE,KAAK;SACZ,CAAC;QAEF,OAAO,CAAA,WAAW,aAAX,WAAW,uBAAX,WAAW,CAAE,KAAK;YACvB,CAAC,CAAC,WAAW,CAAC,KAAK,CAAC,QAAQ,CAAc,MAAM,CAAC;YACjD,CAAC,CAAC,IAAA,yBAAW,EACT,MAAA,WAAW,aAAX,WAAW,uBAAX,WAAW,CAAE,GAAG,mCAAI,mBAAO,aAAP,mBAAO,uBAAP,mBAAO,CAAE,GAAG,EAChC,MAAM,CACP,CAAC;IACR,CAAC,CAAC,CACH,CAAC;AACJ,CAAC,CAAC;AAtBW,QAAA,mBAAmB,uBAsB9B;AAEK,MAAM,gBAAgB,GAAG,CAC9B,WAA6C,EACR,EAAE;;IACvC,MAAM,MAAM,GAAoC;QAC9C,MAAM,EAAE,KAAK;QACb,GAAG,EAAE,MAAA,WAAW,aAAX,WAAW,uBAAX,WAAW,CAAE,GAAG,mCAAI,aAAa;QACtC,MAAM,EAAE,WAAW,aAAX,WAAW,uBAAX,WAAW,CAAE,MAAM;QAC3B,WAAW,EAAE,WAAW,aAAX,WAAW,uBAAX,WAAW,CAAE,WAAW;KACtC,CAAC;IAEF,OAAO,CAAA,WAAW,aAAX,WAAW,uBAAX,WAAW,CAAE,KAAK;QACvB,CAAC,CAAC,WAAW,CAAC,KAAK,CAAC,QAAQ,CAA6B,MAAM,CAAC;QAChE,CAAC,CAAC,IAAA,yBAAW,EACT,MAAA,WAAW,aAAX,WAAW,uBAAX,WAAW,CAAE,GAAG,mCAAI,mBAAO,aAAP,mBAAO,uBAAP,mBAAO,CAAE,GAAG,EAChC,MAAM,CACP,CAAC;AACR,CAAC,CAAC;AAhBW,QAAA,gBAAgB,oBAgB3B;AAEK,MAAM,eAAe,GAAG,CAC7B,EAAU,EACV,WAA6C,EACtB,EAAE;;IACzB,MAAM,MAAM,GAAoC;QAC9C,MAAM,EAAE,KAAK;QACb,GAAG,EAAE,GAAG,MAAA,WAAW,aAAX,WAAW,uBAAX,WAAW,CAAE,GAAG,mCAAI,eAAe,EAAE,EAAE,EAAE;QACjD,MAAM,EAAE,WAAW,aAAX,WAAW,uBAAX,WAAW,CAAE,MAAM;QAC3B,WAAW,EAAE,WAAW,aAAX,WAAW,uBAAX,WAAW,CAAE,WAAW;KACtC,CAAC;IAEF,OAAO,CAAA,WAAW,aAAX,WAAW,uBAAX,WAAW,CAAE,KAAK;QACvB,CAAC,CAAC,WAAW,CAAC,KAAK,CAAC,QAAQ,CAAe,MAAM,CAAC;QAClD,CAAC,CAAC,IAAA,yBAAW,EACT,MAAA,WAAW,aAAX,WAAW,uBAAX,WAAW,CAAE,GAAG,mCAAI,mBAAO,aAAP,mBAAO,uBAAP,mBAAO,CAAE,GAAG,EAChC,MAAM,CACP,CAAC;AACR,CAAC,CAAC;AAjBW,QAAA,eAAe,mBAiB1B","sourcesContent":["/**\n * Copyright (C) 2021 BitModern, Inc - All Rights Reserved\n */\n\nimport { _client } from '../../../ClientSdk';\nimport { getResponse } from '../../actions/getResponse';\nimport { chunkArray } from '../../actions/chunkArray';\nimport type {\n  QueryParams,\n  QueryParamsWithList,\n} from '../../actions/QueryParams';\nimport type { MessageResponse } from '../../actions/MessageResponse';\nimport type { ResourceList } from '../../models/ResourceList';\nimport type { ShareUser } from './ShareUser';\nimport type { ShareUserApi } from './ShareUserApi';\n\nexport const shareUserDetach = (\n  data: Partial<ShareUser>,\n  queryParams?: QueryParams<Partial<ShareUser>>,\n): Promise<MessageResponse> => {\n  if (data.id === undefined) {\n    return Promise.reject(new Error('Must supply id'));\n  }\n  const config: QueryParams<Partial<ShareUser>> = {\n    method: 'delete',\n    url: `/share_user/${data.id}`,\n    params: queryParams?.params,\n  };\n\n  return queryParams?.batch\n    ? queryParams.batch.addBatch<MessageResponse>(config)\n    : getResponse<MessageResponse, Partial<ShareUser>>(\n        queryParams?.api ?? _client?.api,\n        config,\n      );\n};\n\nexport const shareUserDeleteMany = (\n  data: (Partial<ShareUser> & { id: number })[],\n  queryParams?: QueryParamsWithList<Partial<ShareUser & { id: number }>>,\n): Promise<{ count: number }[]> => {\n  const chunks = chunkArray(data, 1000);\n  return Promise.all(\n    chunks.map((chunk) => {\n      const config: QueryParamsWithList<Partial<ShareUser> & { id: number }> = {\n        method: 'post',\n        url: `/share_user/delete`,\n        params: queryParams?.params,\n        list: chunk,\n        headers: queryParams?.headers,\n      };\n\n      return queryParams?.batch\n        ? queryParams.batch.addBatch<{ count: number }>(config)\n        : getResponse<{ count: number }, Partial<ShareUser> & { id: number }>(\n            queryParams?.api ?? _client?.api,\n            config,\n          );\n    }),\n  );\n};\n\nexport const shareUserUpdateOne = (\n  id: number,\n  data: Partial<ShareUser>,\n  queryParams?: QueryParams<Partial<ShareUser>>,\n): Promise<ShareUser> => {\n  const config: QueryParams<Partial<ShareUser>> = {\n    method: 'put',\n    url: `/share_user/${id}`,\n    params: queryParams?.params,\n    data,\n  };\n\n  return queryParams?.batch\n    ? queryParams.batch.addBatch<ShareUser>(config)\n    : getResponse<ShareUser, Partial<ShareUser>>(\n        queryParams?.api ?? _client?.api,\n        config,\n      );\n};\n\nexport const shareUserUpdateMany = (\n  data: (Partial<ShareUser> & { id: number })[],\n  queryParams?: QueryParamsWithList<Partial<ShareUser> & { id: number }>,\n): Promise<ShareUser[][]> => {\n  const chunks = chunkArray(data, 1000);\n  return Promise.all(\n    chunks.map((chunk) => {\n      const config: QueryParamsWithList<Partial<ShareUser> & { id: number }> = {\n        method: 'post',\n        url: queryParams?.url ?? `/share_user`,\n        params: queryParams?.params,\n        list: chunk,\n      };\n\n      return queryParams?.batch\n        ? queryParams.batch.addBatch<ShareUser[]>(config)\n        : getResponse<ShareUser[], Partial<ShareUser> & { id: number }>(\n            queryParams?.api ?? _client?.api,\n            config,\n          );\n    }),\n  );\n};\n\nexport const shareUserCreateOne = (\n  data: Partial<ShareUser>,\n  queryParams?: QueryParams<Partial<ShareUser>>,\n): Promise<ShareUser> => {\n  const config: QueryParams<Partial<ShareUser>> = {\n    method: 'post',\n    url: queryParams?.url ?? `/share_user`,\n    params: queryParams?.params,\n    data,\n  };\n\n  return queryParams?.batch\n    ? queryParams.batch.addBatch<ShareUser>(config)\n    : getResponse<ShareUser, Partial<ShareUser>>(\n        queryParams?.api ?? _client?.api,\n        config,\n      );\n};\n\nexport const shareUserCreateMany = (\n  data: Partial<ShareUser>[],\n  queryParams?: QueryParamsWithList<Partial<ShareUser>>,\n): Promise<ShareUser[][]> => {\n  const chunks = chunkArray(data, 1000);\n  return Promise.all(\n    chunks.map((chunk) => {\n      const config: QueryParamsWithList<Partial<ShareUser>> = {\n        method: 'post',\n        url: queryParams?.url ?? `/share_user`,\n        params: queryParams?.params,\n        list: chunk,\n      };\n\n      return queryParams?.batch\n        ? queryParams.batch.addBatch<ShareUser[]>(config)\n        : getResponse<ShareUser[], Partial<ShareUser>>(\n            queryParams?.api ?? _client?.api,\n            config,\n          );\n    }),\n  );\n};\n\nexport const shareUserGetMany = (\n  queryParams?: QueryParams<Partial<ShareUser>>,\n): Promise<ResourceList<ShareUserApi>> => {\n  const config: QueryParams<Partial<ShareUser>> = {\n    method: 'get',\n    url: queryParams?.url ?? `/share_user`,\n    params: queryParams?.params,\n    cancelToken: queryParams?.cancelToken,\n  };\n\n  return queryParams?.batch\n    ? queryParams.batch.addBatch<ResourceList<ShareUserApi>>(config)\n    : getResponse<ResourceList<ShareUserApi>, Partial<ShareUser>>(\n        queryParams?.api ?? _client?.api,\n        config,\n      );\n};\n\nexport const shareUserGetOne = (\n  id: number,\n  queryParams?: QueryParams<Partial<ShareUser>>,\n): Promise<ShareUserApi> => {\n  const config: QueryParams<Partial<ShareUser>> = {\n    method: 'get',\n    url: `${queryParams?.url ?? `/share_user/${id}`}`,\n    params: queryParams?.params,\n    cancelToken: queryParams?.cancelToken,\n  };\n\n  return queryParams?.batch\n    ? queryParams.batch.addBatch<ShareUserApi>(config)\n    : getResponse<ShareUserApi, Partial<ShareUser>>(\n        queryParams?.api ?? _client?.api,\n        config,\n      );\n};\n"]}