/**
 * Copyright (C) 2021 BitModern, Inc - All Rights Reserved
 */
import type { QueryParams, QueryParamsWithList } from '../../actions/QueryParams';
import type { MessageResponse } from '../../actions/MessageResponse';
import type { ResourceList } from '../../models/ResourceList';
import type { CaseType } from './CaseType';
import type { CaseTypeApi } from './CaseTypeApi';
export declare const caseTypeGetMany: (queryParams?: QueryParams<Partial<CaseType>>) => Promise<ResourceList<CaseTypeApi>>;
export declare const caseTypeGetOne: (id: number, queryParams?: QueryParams<Partial<CaseType>>) => Promise<CaseTypeApi>;
export declare const caseTypeDeleteOne: (id: number, queryParams?: QueryParams<Partial<CaseType>>) => Promise<MessageResponse>;
export declare const caseTypeDeleteMany: (data: (Partial<CaseType> & {
    id: number;
})[], queryParams?: QueryParamsWithList<Partial<CaseType> & {
    id: number;
}>) => Promise<{
    count: number;
}[]>;
export declare const caseTypeUpdateOne: (id: number, data: Partial<CaseType>, queryParams?: QueryParams<Partial<CaseType>>) => Promise<CaseType>;
export declare const caseTypeUpdateMany: (data: (Partial<CaseType> & {
    id: number;
})[], queryParams?: QueryParamsWithList<Partial<CaseType> & {
    id: number;
}>) => Promise<CaseType[][]>;
export declare const caseTypeCreateOne: (data: Partial<CaseType>, queryParams?: QueryParams<Partial<CaseType>>) => Promise<CaseType>;
export declare const caseTypeCreateMany: (data: Partial<CaseType>[], queryParams?: QueryParamsWithList<Partial<CaseType>>) => Promise<CaseType[][]>;
//# sourceMappingURL=caseTypeService.d.ts.map