/**
 * Copyright (C) 2021 BitModern, Inc - All Rights Reserved
 */
import type { QueryParams, QueryParamsWithList } from '../../actions/QueryParams';
import type { MessageResponse } from '../../actions/MessageResponse';
import type { ResourceList } from '../../models/ResourceList';
import type { SharedPrecondition } from './SharedPrecondition';
import type { SharedPreconditionApi } from './SharedPreconditionApi';
export declare const sharedPreconditionGetMany: (queryParams?: QueryParams<Partial<SharedPrecondition>>) => Promise<ResourceList<SharedPreconditionApi>>;
export declare const sharedPreconditionGetOne: (id: number, queryParams?: QueryParams<Partial<SharedPrecondition>>) => Promise<SharedPreconditionApi>;
export declare const sharedPreconditionDeleteOne: (id: number, queryParams?: QueryParams<Partial<SharedPrecondition>>) => Promise<MessageResponse>;
export declare const sharedPreconditionDeleteMany: (data: (Partial<SharedPrecondition> & {
    id: number;
})[], queryParams?: QueryParamsWithList<Partial<SharedPrecondition> & {
    id: number;
}>) => Promise<{
    count: number;
}[]>;
export declare const sharedPreconditionUpdateOne: (id: number, data: Partial<SharedPrecondition>, queryParams?: QueryParams<Partial<SharedPrecondition>>) => Promise<SharedPrecondition>;
export declare const sharedPreconditionUpdateMany: (data: (Partial<SharedPrecondition> & {
    id: number;
})[], queryParams?: QueryParamsWithList<Partial<SharedPrecondition> & {
    id: number;
}>) => Promise<SharedPrecondition[][]>;
export declare const sharedPreconditionCreateOne: (data: Partial<SharedPrecondition>, queryParams?: QueryParams<Partial<SharedPrecondition>>) => Promise<SharedPrecondition>;
export declare const sharedPreconditionCreateMany: (data: Partial<SharedPrecondition>[], queryParams?: QueryParamsWithList<Partial<SharedPrecondition>>) => Promise<SharedPrecondition[][]>;
//# sourceMappingURL=sharedPreconditionService.d.ts.map