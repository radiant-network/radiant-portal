"use strict";
/**
 * Copyright (C) 2021 BitModern, Inc - All Rights Reserved
 */
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.getResponse = void 0;
const QueryParams_1 = require("./QueryParams");
function getResponse(api, queryParams) {
    var _a;
    return __awaiter(this, void 0, void 0, function* () {
        if (!api) {
            throw new Error('No clientSkd.api provided');
        }
        const resp = yield api.request({
            method: (_a = queryParams.method) !== null && _a !== void 0 ? _a : 'get',
            url: queryParams.url,
            params: queryParams.params,
            data: (0, QueryParams_1.hasListProperty)(queryParams) ? queryParams.list : queryParams.data,
            headers: queryParams.headers,
        });
        if (resp && resp.data) {
            return resp.data;
        }
        throw new Error('No response was provided');
    });
}
exports.getResponse = getResponse;
//# sourceMappingURL=getResponse.js.map