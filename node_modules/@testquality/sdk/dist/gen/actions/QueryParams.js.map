{"version":3,"file":"QueryParams.js","sourceRoot":"","sources":["../../../src/gen/actions/QueryParams.ts"],"names":[],"mappings":";AAAA;;GAEG;;;AAMH,SAAgB,eAAe,CAC7B,WAAgB;IAEhB,OAAO,MAAM,IAAI,WAAW,CAAC;AAC/B,CAAC;AAJD,0CAIC","sourcesContent":["/**\n * Copyright (C) 2021 BitModern, Inc - All Rights Reserved\n */\n\nimport type { CancelToken, Method, AxiosInstance } from 'axios';\nimport type { TQRequestParameters } from './TQRequestParameters';\nimport type { BatchService } from '../../services/http/BatchService';\n\nexport function hasListProperty(\n  queryParams: any,\n): queryParams is QueryParamsWithList {\n  return 'list' in queryParams;\n}\n\ntype AddInSuffix<T> = {\n  [K in keyof T as `${K & string}-in`]: string;\n};\n\ntype ParamsWithInSuffix<T> = Partial<T & AddInSuffix<T>> & TQRequestParameters;\n\nexport interface QueryParams<T = any, P = T> {\n  api?: AxiosInstance;\n  batch?: BatchService;\n  cancelToken?: CancelToken;\n  data?: T;\n  headers?: any;\n  id?: number | string;\n  method?: Method;\n  params?: ParamsWithInSuffix<P>;\n  url?: string;\n}\n\nexport interface QueryParamsWithList<T = any> extends QueryParams<T> {\n  list: T[];\n}\n\nexport interface QueryParamsWithInSuffix<T = any> extends QueryParams<T> {\n  params?: ParamsWithInSuffix<T>;\n}\n"]}