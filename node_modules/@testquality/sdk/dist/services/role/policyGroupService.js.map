{"version":3,"file":"policyGroupService.js","sourceRoot":"","sources":["../../../src/services/role/policyGroupService.ts"],"names":[],"mappings":";;;AAAA,+CAAkE;AAElE,+CAA0C;AAE1C,IAAY,kBAGX;AAHD,WAAY,kBAAkB;IAC5B,mCAAa,CAAA;IACb,mCAAa,CAAA;AACf,CAAC,EAHW,kBAAkB,kCAAlB,kBAAkB,QAG7B;AAOM,MAAM,kBAAkB,GAAG,CAChC,WAAyB,EACD,EAAE;;IAC1B,MAAM,MAAM,GAAgB;QAC1B,MAAM,EAAE,KAAK;QACb,GAAG,EAAE,eAAe;QACpB,MAAM,EAAE,WAAW,aAAX,WAAW,uBAAX,WAAW,CAAE,MAAM;QAC3B,WAAW,EAAE,WAAW,aAAX,WAAW,uBAAX,WAAW,CAAE,WAAW;QACrC,OAAO,EAAE,WAAW,aAAX,WAAW,uBAAX,WAAW,CAAE,OAAO;KAC9B,CAAC;IAEF,OAAO,CAAA,WAAW,aAAX,WAAW,uBAAX,WAAW,CAAE,KAAK;QACvB,CAAC,CAAC,WAAW,CAAC,KAAK,CAAC,QAAQ,CAAgB,MAAM,CAAC;QACnD,CAAC,CAAC,IAAA,qBAAW,EAAqB,MAAA,WAAW,aAAX,WAAW,uBAAX,WAAW,CAAE,GAAG,mCAAI,mBAAO,aAAP,mBAAO,uBAAP,mBAAO,CAAE,GAAG,EAAE,MAAM,CAAC,CAAC;AAChF,CAAC,CAAC;AAdW,QAAA,kBAAkB,sBAc7B;AAEK,MAAM,oBAAoB,GAAG,CAClC,EAAU,EACV,IAAuB,EACvB,WAAyB,EACH,EAAE;;IACxB,MAAM,MAAM,GAAgB;QAC1B,MAAM,EAAE,KAAK;QACb,GAAG,EAAE,iBAAiB,EAAE,EAAE;QAC1B,MAAM,EAAE,WAAW,aAAX,WAAW,uBAAX,WAAW,CAAE,MAAM;QAC3B,IAAI;QACJ,OAAO,EAAE,WAAW,aAAX,WAAW,uBAAX,WAAW,CAAE,OAAO;KAC9B,CAAC;IAEF,OAAO,CAAA,WAAW,aAAX,WAAW,uBAAX,WAAW,CAAE,KAAK;QACvB,CAAC,CAAC,WAAW,CAAC,KAAK,CAAC,QAAQ,CAAc,MAAM,CAAC;QACjD,CAAC,CAAC,IAAA,qBAAW,EACT,MAAA,WAAW,aAAX,WAAW,uBAAX,WAAW,CAAE,GAAG,mCAAI,mBAAO,aAAP,mBAAO,uBAAP,mBAAO,CAAE,GAAG,EAChC,MAAM,CACP,CAAC;AACR,CAAC,CAAC;AAnBW,QAAA,oBAAoB,wBAmB/B","sourcesContent":["import { getResponse, type QueryParams } from '../../gen/actions';\nimport { type PolicyGroup } from './PolicyGroup';\nimport { _client } from '../../ClientSdk';\n\nexport enum PolicyGroupActions {\n  view = 'view',\n  edit = 'edit',\n}\n\nexport interface PolicyGroupUpdate {\n  access_role_id: number;\n  actions: Record<PolicyGroupActions, boolean>;\n}\n\nexport const policyGroupGetMany = (\n  queryParams?: QueryParams,\n): Promise<PolicyGroup[]> => {\n  const config: QueryParams = {\n    method: 'get',\n    url: '/policy_group',\n    params: queryParams?.params,\n    cancelToken: queryParams?.cancelToken,\n    headers: queryParams?.headers,\n  };\n\n  return queryParams?.batch\n    ? queryParams.batch.addBatch<PolicyGroup[]>(config)\n    : getResponse<PolicyGroup[], any>(queryParams?.api ?? _client?.api, config);\n};\n\nexport const policyGroupUpdateOne = (\n  id: number,\n  data: PolicyGroupUpdate,\n  queryParams?: QueryParams,\n): Promise<PolicyGroup> => {\n  const config: QueryParams = {\n    method: 'put',\n    url: `/policy_group/${id}`,\n    params: queryParams?.params,\n    data,\n    headers: queryParams?.headers,\n  };\n\n  return queryParams?.batch\n    ? queryParams.batch.addBatch<PolicyGroup>(config)\n    : getResponse<PolicyGroup, PolicyGroupUpdate>(\n        queryParams?.api ?? _client?.api,\n        config,\n      );\n};\n"]}