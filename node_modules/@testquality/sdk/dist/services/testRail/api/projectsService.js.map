{"version":3,"file":"projectsService.js","sourceRoot":"","sources":["../../../../src/services/testRail/api/projectsService.ts"],"names":[],"mappings":";;;AAAA,kDAA6C;AAC7C,kDAAqE;AAK9D,MAAM,WAAW,GAAG,CACzB,WAAyC,EACd,EAAE;;IAC7B,MAAM,MAAM,GAAgC;QAC1C,MAAM,EAAE,KAAK;QACb,GAAG,EAAE,oBAAoB;QACzB,WAAW,EAAE,WAAW,aAAX,WAAW,uBAAX,WAAW,CAAE,WAAW;QACrC,MAAM,EAAE,WAAW,aAAX,WAAW,uBAAX,WAAW,CAAE,MAAM;KAC5B,CAAC;IAEF,OAAO,CAAA,WAAW,aAAX,WAAW,uBAAX,WAAW,CAAE,KAAK;QACvB,CAAC,CAAC,WAAW,CAAC,KAAK,CAAC,QAAQ,CAAmB,MAAM,CAAC;QACtD,CAAC,CAAC,IAAA,qBAAW,EACT,MAAA,WAAW,aAAX,WAAW,uBAAX,WAAW,CAAE,GAAG,mCAAI,mBAAO,aAAP,mBAAO,uBAAP,mBAAO,CAAE,GAAG,EAChC,MAAM,CACP,CAAC;AACR,CAAC,CAAC;AAhBW,QAAA,WAAW,eAgBtB;AAQK,MAAM,iBAAiB,GAAG,CAC/B,iBAAyB,EACzB,WAAoB,EACpB,OAAiB,EACjB,WAAgE,EACnC,EAAE;;IAC/B,MAAM,MAAM,GAAyC;QACnD,MAAM,EAAE,MAAM;QACd,GAAG,EAAE,2BAA2B;QAChC,WAAW,EAAE,WAAW,aAAX,WAAW,uBAAX,WAAW,CAAE,WAAW;QACrC,IAAI,EAAE;YACJ,SAAS,EAAE,iBAAiB;YAC5B,WAAW;YACX,eAAe,EAAE,OAAO;SACzB;KACF,CAAC;IAEF,OAAO,CAAA,WAAW,aAAX,WAAW,uBAAX,WAAW,CAAE,KAAK;QACvB,CAAC,CAAC,WAAW,CAAC,KAAK,CAAC,QAAQ,CAAqB,MAAM,CAAC;QACxD,CAAC,CAAC,IAAA,qBAAW,EACT,MAAA,WAAW,aAAX,WAAW,uBAAX,WAAW,CAAE,GAAG,mCAAI,mBAAO,aAAP,mBAAO,uBAAP,mBAAO,CAAE,GAAG,EAChC,MAAM,CACP,CAAC;AACR,CAAC,CAAC;AAvBW,QAAA,iBAAiB,qBAuB5B","sourcesContent":["import { _client } from '../../../ClientSdk';\nimport { getResponse, type QueryParams } from '../../../gen/actions';\nimport { type Mapping } from '../interfaces/Mapping';\nimport { type TestRailParams } from '../interfaces/TestRailParams';\nimport { type TestRailProjects } from '../interfaces/TestRailProjects';\n\nexport const getProjects = (\n  queryParams?: QueryParams<TestRailParams>,\n): Promise<TestRailProjects> => {\n  const config: QueryParams<TestRailParams> = {\n    method: 'get',\n    url: '/testrail/projects',\n    cancelToken: queryParams?.cancelToken,\n    params: queryParams?.params,\n  };\n\n  return queryParams?.batch\n    ? queryParams.batch.addBatch<TestRailProjects>(config)\n    : getResponse<TestRailProjects, TestRailParams>(\n        queryParams?.api ?? _client?.api,\n        config,\n      );\n};\n\ninterface PostImportProjectParams {\n  projectId: number;\n  tqProjectId?: number;\n  entitiesMapping?: Mapping;\n}\n\nexport const postImportProject = (\n  testRailProjectId: number,\n  tqProjectId?: number,\n  mapping?: Mapping,\n  queryParams?: Omit<QueryParams<void>, 'url' | 'params' | 'data'>,\n): Promise<{ job_id: string }> => {\n  const config: QueryParams<PostImportProjectParams> = {\n    method: 'post',\n    url: '/testrail/projects/import',\n    cancelToken: queryParams?.cancelToken,\n    data: {\n      projectId: testRailProjectId,\n      tqProjectId,\n      entitiesMapping: mapping,\n    },\n  };\n\n  return queryParams?.batch\n    ? queryParams.batch.addBatch<{ job_id: string }>(config)\n    : getResponse<{ job_id: string }, PostImportProjectParams>(\n        queryParams?.api ?? _client?.api,\n        config,\n      );\n};\n"]}