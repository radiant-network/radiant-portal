{"version":3,"file":"credentialsService.js","sourceRoot":"","sources":["../../../../src/services/testRail/api/credentialsService.ts"],"names":[],"mappings":";;;AAAA,kDAA6C;AAC7C,kDAAqE;AAG9D,MAAM,gBAAgB,GAAG,CAC9B,WAAuD,EACzC,EAAE;;IAChB,MAAM,MAAM,GAAsB;QAChC,MAAM,EAAE,QAAQ;QAChB,GAAG,EAAE,uBAAuB;QAC5B,WAAW,EAAE,WAAW,aAAX,WAAW,uBAAX,WAAW,CAAE,WAAW;KACtC,CAAC;IAEF,OAAO,CAAA,WAAW,aAAX,WAAW,uBAAX,WAAW,CAAE,KAAK;QACvB,CAAC,CAAC,WAAW,CAAC,KAAK,CAAC,QAAQ,CAAM,MAAM,CAAC;QACzC,CAAC,CAAC,IAAA,qBAAW,EAAY,MAAA,WAAW,aAAX,WAAW,uBAAX,WAAW,CAAE,GAAG,mCAAI,mBAAO,aAAP,mBAAO,uBAAP,mBAAO,CAAE,GAAG,EAAE,MAAM,CAAC,CAAC;AACvE,CAAC,CAAC;AAZW,QAAA,gBAAgB,oBAY3B;AAEK,MAAM,cAAc,GAAG,CAC5B,WAAuD,EAClB,EAAE;;IACvC,MAAM,MAAM,GAAsB;QAChC,MAAM,EAAE,KAAK;QACb,GAAG,EAAE,uBAAuB;QAC5B,WAAW,EAAE,WAAW,aAAX,WAAW,uBAAX,WAAW,CAAE,WAAW;KACtC,CAAC;IAEF,OAAO,CAAA,WAAW,aAAX,WAAW,uBAAX,WAAW,CAAE,KAAK;QACvB,CAAC,CAAC,WAAW,CAAC,KAAK,CAAC,QAAQ,CAA6B,MAAM,CAAC;QAChE,CAAC,CAAC,IAAA,qBAAW,EACT,MAAA,WAAW,aAAX,WAAW,uBAAX,WAAW,CAAE,GAAG,mCAAI,mBAAO,aAAP,mBAAO,uBAAP,mBAAO,CAAE,GAAG,EAChC,MAAM,CACP,CAAC;AACR,CAAC,CAAC;AAfW,QAAA,cAAc,kBAezB;AAEK,MAAM,eAAe,GAAG,CAC7B,WAC0D,EAC1D,EAAE;;IACF,MAAM,MAAM,GAAqC;QAC/C,MAAM,EAAE,MAAM;QACd,GAAG,EAAE,uBAAuB;QAC5B,WAAW,EAAE,WAAW,aAAX,WAAW,uBAAX,WAAW,CAAE,WAAW;QACrC,IAAI,EAAE,WAAW,CAAC,IAAI;KACvB,CAAC;IAEF,OAAO,CAAA,WAAW,aAAX,WAAW,uBAAX,WAAW,CAAE,KAAK;QACvB,CAAC,CAAC,WAAW,CAAC,KAAK,CAAC,QAAQ,CAAsB,MAAM,CAAC;QACzD,CAAC,CAAC,IAAA,qBAAW,EACT,MAAA,WAAW,aAAX,WAAW,uBAAX,WAAW,CAAE,GAAG,mCAAI,mBAAO,aAAP,mBAAO,uBAAP,mBAAO,CAAE,GAAG,EAChC,MAAM,CACP,CAAC;AACR,CAAC,CAAC;AAjBW,QAAA,eAAe,mBAiB1B","sourcesContent":["import { _client } from '../../../ClientSdk';\nimport { getResponse, type QueryParams } from '../../../gen/actions';\nimport { type TestRailCredentials } from '../interfaces/TestRailCredentials';\n\nexport const clearCredentials = (\n  queryParams?: Omit<QueryParams<void>, 'url' | 'params'>,\n): Promise<any> => {\n  const config: QueryParams<void> = {\n    method: 'delete',\n    url: '/testrail/credentials',\n    cancelToken: queryParams?.cancelToken,\n  };\n\n  return queryParams?.batch\n    ? queryParams.batch.addBatch<any>(config)\n    : getResponse<any, void>(queryParams?.api ?? _client?.api, config);\n};\n\nexport const getCredentials = (\n  queryParams?: Omit<QueryParams<void>, 'url' | 'params'>,\n): Promise<TestRailCredentials | null> => {\n  const config: QueryParams<void> = {\n    method: 'get',\n    url: '/testrail/credentials',\n    cancelToken: queryParams?.cancelToken,\n  };\n\n  return queryParams?.batch\n    ? queryParams.batch.addBatch<TestRailCredentials | null>(config)\n    : getResponse<TestRailCredentials | null, void>(\n        queryParams?.api ?? _client?.api,\n        config,\n      );\n};\n\nexport const postCredentials = (\n  queryParams: Required<Pick<QueryParams<TestRailCredentials>, 'data'>> &\n    Omit<QueryParams<TestRailCredentials>, 'url' | 'params'>,\n) => {\n  const config: QueryParams<TestRailCredentials> = {\n    method: 'post',\n    url: '/testrail/credentials',\n    cancelToken: queryParams?.cancelToken,\n    data: queryParams.data,\n  };\n\n  return queryParams?.batch\n    ? queryParams.batch.addBatch<TestRailCredentials>(config)\n    : getResponse<any, TestRailCredentials>(\n        queryParams?.api ?? _client?.api,\n        config,\n      );\n};\n"]}