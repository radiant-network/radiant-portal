{"version":3,"file":"caseTypesService.js","sourceRoot":"","sources":["../../../../src/services/testRail/api/caseTypesService.ts"],"names":[],"mappings":";;;AAAA,kDAA6C;AAC7C,kDAAqE;AAG9D,MAAM,YAAY,GAAG,CAC1B,WAAuD,EAC1B,EAAE;;IAC/B,MAAM,MAAM,GAAsB;QAChC,MAAM,EAAE,KAAK;QACb,GAAG,EAAE,sBAAsB;QAC3B,WAAW,EAAE,WAAW,aAAX,WAAW,uBAAX,WAAW,CAAE,WAAW;KACtC,CAAC;IAEF,OAAO,CAAA,WAAW,aAAX,WAAW,uBAAX,WAAW,CAAE,KAAK;QACvB,CAAC,CAAC,WAAW,CAAC,KAAK,CAAC,QAAQ,CAAqB,MAAM,CAAC;QACxD,CAAC,CAAC,IAAA,qBAAW,EACT,MAAA,WAAW,aAAX,WAAW,uBAAX,WAAW,CAAE,GAAG,mCAAI,mBAAO,aAAP,mBAAO,uBAAP,mBAAO,CAAE,GAAG,EAChC,MAAM,CACP,CAAC;AACR,CAAC,CAAC;AAfW,QAAA,YAAY,gBAevB","sourcesContent":["import { _client } from '../../../ClientSdk';\nimport { getResponse, type QueryParams } from '../../../gen/actions';\nimport { type TestRailCaseType } from '../interfaces/TestRailCaseType';\n\nexport const getCaseTypes = (\n  queryParams?: Omit<QueryParams<void>, 'url' | 'params'>,\n): Promise<TestRailCaseType[]> => {\n  const config: QueryParams<void> = {\n    method: 'get',\n    url: '/testrail/case-types',\n    cancelToken: queryParams?.cancelToken,\n  };\n\n  return queryParams?.batch\n    ? queryParams.batch.addBatch<TestRailCaseType[]>(config)\n    : getResponse<TestRailCaseType[], void>(\n        queryParams?.api ?? _client?.api,\n        config,\n      );\n};\n"]}