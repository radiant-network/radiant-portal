"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.TokenStorageImpl = void 0;
class TokenStorageImpl {
    constructor(persistentStorage) {
        this.persistentStorage = persistentStorage;
    }
    getRemember() {
        return __awaiter(this, void 0, void 0, function* () {
            if (this.remember === undefined && this.persistentStorage) {
                this.remember = yield this.persistentStorage.get('remember');
            }
            return this.remember;
        });
    }
    getToken() {
        return __awaiter(this, void 0, void 0, function* () {
            if (!this.token && this.persistentStorage) {
                this.token = yield this.persistentStorage.get('token');
            }
            return this.token;
        });
    }
    setToken(token, remember) {
        return __awaiter(this, void 0, void 0, function* () {
            this.token = token;
            this.remember = remember !== null && remember !== void 0 ? remember : (yield this.getRemember());
            if (this.persistentStorage) {
                if (this.remember) {
                    yield this.persistentStorage.set('token', token);
                }
                else {
                    yield this.persistentStorage.set('token', undefined);
                }
                yield this.persistentStorage.set('remember', this.remember);
            }
            return this.token;
        });
    }
}
exports.TokenStorageImpl = TokenStorageImpl;
//# sourceMappingURL=TokenStorageImpl.js.map