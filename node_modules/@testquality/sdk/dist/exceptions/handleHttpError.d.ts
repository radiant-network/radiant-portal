import { type AxiosResponse } from 'axios';
import { HttpError } from './HttpError';
export declare const UNKNOWN_ERROR = "UNKNOWN_ERROR";
export declare const NO_ACCESS_TOKEN = "NO_ACCESS_TOKEN";
export declare const NO_REFRESH_TOKEN = "NO_REFRESH_TOKEN";
export declare const REFRESH_TOKEN_ERROR = "REFRESH_TOKEN_ERROR";
export declare const UNAUTHORIZED = "UNAUTHORIZED";
export declare const VALIDATION_ERROR = "VALIDATION_ERROR";
export declare const EMAIL_VERIFICATION_ERROR = "EMAIL_VERIFICATION_ERROR";
export declare const EXPIRED_USER_EXCEPTION = "EXPIRED_USER_EXCEPTION";
export declare const CHANGE_PASSWORD_FAILURE_EXCEPTION = "CHANGE_PASSWORD_FAILURE_EXCEPTION";
export declare const CLIENT_ID_INMUTABLE_EXCEPTION = "CLIENT_ID_INMUTABLE_EXCEPTION";
export declare const CREATED_BY_INMUTABLE_EXCEPTION = "CREATED_BY_INMUTABLE_EXCEPTION";
export declare const GITHUB_PURCHASE_ALREADY_ALLOCATED_EXCEPTION = "GITHUB_PURCHASE_ALREADY_ALLOCATED_EXCEPTION";
export declare const INTEGRATION_AUTH_EXCEPTION = "INTEGRATION_AUTH_EXCEPTION";
export declare const INTEGRATION_EXCEPTION = "INTEGRATION_EXCEPTION";
export declare const INTEGRATION_JIRA_EXCEPTION = "INTEGRATION_JIRA_EXCEPTION";
export declare const INVALID_TOKEN_EXCEPTION = "INVALID_TOKEN_EXCEPTION";
export declare const MAIL_CHIMP_EXCEPTION = "MAIL_CHIMP_EXCEPTION";
export declare const NO_TOKEN_EXCEPTION = "NO_TOKEN_EXCEPTION";
export declare const PASSWORD_STRENGTH_EXCEPTION = "PASSWORD_STRENGTH_EXCEPTION";
export declare const PRIMARY_KEY_VIOLATION_EXCEPTION = "PRIMARY_KEY_VIOLATION_EXCEPTION";
export declare const RESOURCE_STORE_FAILED_EXCEPTION = "RESOURCE_STORE_FAILED_EXCEPTION";
export declare const RUN_CREATE_EXCEPTION = "RUN_CREATE_EXCEPTION";
export declare const UPDATE_EXCEPTION = "UPDATE_EXCEPTION";
export declare const USER_CREATE_EXCEPTION = "USER_CREATE_EXCEPTION";
export declare const USER_NOT_AUTHORIZED_EXCEPTION = "USER_NOT_AUTHORIZED_EXCEPTION";
export declare const USER_NOT_FOUND_EXCEPTION = "USER_NOT_FOUND_EXCEPTION";
export declare const VALIDATION_FAILED_EXCEPTION = "VALIDATION_FAILED_EXCEPTION";
export declare function getHttpResponse(response: AxiosResponse): HttpError;
export declare function showNotificationError(newError: HttpError, client?: import("../ClientSdk").ClientSdk | undefined): HttpError;
//# sourceMappingURL=handleHttpError.d.ts.map