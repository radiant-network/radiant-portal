import{j as e}from"./jsx-runtime-D_zvdyIk.js";import{c as d,D as i,B as g,a as y,T as u,b as _}from"./date-cell-C7-f_Ai_.js";import{C as x}from"./applications-config-pyPLye2e.js";import{B as f}from"./chunk-QMGIS6GS-B2N4RFn-.js";import"./tooltip-DogpHjiW.js";import"./index-DQLiH3RP.js";import"./index-DTwDs4x6.js";import"./index-Dw-eQTPP.js";import"./index-CECE1b4A.js";import"./index-CJPVTaBz.js";import"./index-BkhUCz-k.js";import"./index-BsCFIxoT.js";import"./index-uZc0PFVk.js";import"./utils-D-KgF5mV.js";import"./index-C66Dxnp2.js";import"./button-AB3PHWku.js";import"./ActionButton-BqVcLudk.js";import"./dropdown-menu-Begym49V.js";import"./index-Buy_jb7k.js";import"./check-DSCf8CVO.js";import"./createLucideIcon-BMP5cxO1.js";import"./button.variants-BQkt_1YJ.js";import"./ellipsis-BtlAG3ey.js";import"./spinner-DHVcj7-u.js";import"./i18n-0hy89rJe.js";import"./iframe-DXDRFH5m.js";import"./context-DNAkM4o1.js";import"./checkbox-Ce_wbgB6.js";import"./index-DDGWSPzp.js";import"./skeleton-Shk8p_SP.js";import"./settings-BZdKjm2O.js";import"./number-format-DDJvc-iv.js";import"./select-B3-ZNG_-.js";import"./chevron-down-QEmn0_AS.js";import"./api-fYFwtGmU.js";import"./empty-BGfOlJJ0.js";import"./chart-scatter-Ar50k2GJ.js";import"./card-fYcqLYhc.js";import"./separator-PkW7KAol.js";import"./search-DYa5HqpW.js";import"./circle-alert-4q88kTxq.js";import"./badge-BEvKHJki.js";import"./x-ClsbQ_rO.js";import"./en-US-Bm9FTEXR.js";const j={variant_entity:{app_id:"variant_entity"},variant_exploration:{app_id:"variant_exploration_multi_select_filter",aggregations:[]},admin:{admin_code:"admin",app_id:"admin"},portal:{name:"",navigation:{}}},a=d(),D=[a.accessor("id",{cell:r=>r.getValue(),header:"Task ID",size:100}),a.accessor("type_code",{cell:r=>e.jsx(g,{variant:"secondary",tooltip:r.row.original.type_name,children:r.getValue()}),header:"Type",size:100}),a.accessor("patients",{cell:r=>e.jsx(y,{variant:"outline",badges:r.getValue()}),header:"Patients",minSize:148}),a.accessor("created_on",{cell:r=>e.jsx(_,{date:r.getValue()}),header:()=>e.jsx(u,{tooltips:"yyyy-mm-dd",children:"Created On"}),size:80})],h=Array.from(Array(21).keys()).map(r=>({id:r,type_code:"ngba",type_name:"Normal Genome Bioinformatic Analysis",created_on:"2021-10-12T13:08:00Z",patients:["father","mother","proband","sibling"]})),dr={title:"Data Display/Display Table",component:i,args:{data:h,columns:D},decorators:[r=>e.jsx(f,{children:e.jsx(x,{config:j,children:e.jsx(r,{})})})]},t={args:{},render:r=>e.jsx(i,{...r})},o={args:{data:[]},render:r=>e.jsx(i,{...r})};var s,p,m;t.parameters={...t.parameters,docs:{...(s=t.parameters)==null?void 0:s.docs,source:{originalSource:`{
  args: {},
  render: args => <DisplayTable {...args} />
}`,...(m=(p=t.parameters)==null?void 0:p.docs)==null?void 0:m.source}}};var n,l,c;o.parameters={...o.parameters,docs:{...(n=o.parameters)==null?void 0:n.docs,source:{originalSource:`{
  args: {
    data: []
  },
  render: args => <DisplayTable {...args} />
}`,...(c=(l=o.parameters)==null?void 0:l.docs)==null?void 0:c.source}}};const gr=["Default","Empty"];export{t as Default,o as Empty,gr as __namedExportsOrder,dr as default};
