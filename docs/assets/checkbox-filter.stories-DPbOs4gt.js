import{j as c}from"./jsx-runtime-D_zvdyIk.js";import{r as u}from"./index-CGj_12n1.js";import{C as o}from"./checkbox-filter-DLXakNDu.js";import{C,A as d}from"./applications-config-DwuB3Ut-.js";import{T as t}from"./test-tube-diagonal-U7YTje3f.js";import{B as g}from"./chunk-PVWAREVJ-C1taxNkX.js";import"./index-C66Dxnp2.js";import"./number-format-D03oK8BY.js";import"./utils-D-KgF5mV.js";import"./checkbox-B0xIRynn.js";import"./index-COcwYKbe.js";import"./index-D8dqFcAi.js";import"./index-BBPXtLXU.js";import"./index-CcLUv2_A.js";import"./index-qxuqJ0RB.js";import"./index-A6VgBoaw.js";import"./index-BOEjv1S3.js";import"./check-DRc1RmCY.js";import"./createLucideIcon-8Lr1oLzj.js";import"./label-CnYaQ8j3.js";const x={variant_entity:{app_id:d.variant_entity},snv_occurrence:{app_id:d.snv_occurrence,aggregations:[]},cnv_occurrence:{app_id:d.cnv_occurrence,aggregations:[]},admin:{admin_code:"admin",app_id:d.admin},portal:{name:"",navigation:{}}},w={title:"Inputs/ChecboxFilter",component:o,args:{},decorators:[n=>c.jsx(g,{children:c.jsx(C,{config:x,children:c.jsx(n,{})})})]},a={args:{label:"Loremp ipsum"},render:n=>{const[i,r]=u.useState([]),s=e=>p=>{if(p){r([...i,e]);return}r(i.filter(m=>m!==e))};return c.jsx("div",{className:"flex flex-col gap-6",children:["xs","sm"].map(e=>c.jsxs("div",{className:"flex flex-col gap-3",children:[c.jsxs("span",{className:"leading-2 font-bold uppercase",children:[" ",e," "]}),c.jsx(o,{...n,size:e,checked:i.includes(`${e}-ck1`),onCheckedChange:s(`${e}-ck1`)}),c.jsx(o,{...n,size:e,count:100,checked:i.includes(`${e}-ck2`),onCheckedChange:s(`${e}-ck2`)}),c.jsx(o,{...n,size:e,count:100,description:"Loremp ipsum",checked:i.includes(`${e}-ck3`),onCheckedChange:s(`${e}-ck3`)}),c.jsx(o,{...n,size:e,count:100,description:"Lorem ipsum dolor sit amet, consectetur adipiscing elit. ",checked:i.includes(`${e}-ck4`),onCheckedChange:s(`${e}-ck4`)}),c.jsx(o,{...n,size:e,icon:c.jsx(t,{}),checked:i.includes(`${e}-ck5`),onCheckedChange:s(`${e}-ck5`)}),c.jsx(o,{...n,size:e,icon:c.jsx(t,{}),count:100,checked:i.includes(`${e}-ck6`),onCheckedChange:s(`${e}-ck6`)}),c.jsx(o,{...n,size:e,icon:c.jsx(t,{}),count:100,description:"Loremp ipsum",checked:i.includes(`${e}-ck7`),onCheckedChange:s(`${e}-ck7`)}),c.jsx(o,{...n,size:e,icon:c.jsx(t,{}),count:100,description:"Lorem ipsum dolor sit amet, consectetur adipiscing elit. ",checked:i.includes(`${e}-ck8`),onCheckedChange:s(`${e}-ck8`)}),c.jsx(o,{...n,label:"Lorem ipsum dolor sit amet, consectetur adipiscing elit. ",size:e,icon:c.jsx(t,{}),count:100,description:"Lorem ipsum dolor sit amet, consectetur adipiscing elit. ",checked:i.includes(`${e}-ck9`),onCheckedChange:s(`${e}-ck9`)})]},e))})}};var h,l,k;a.parameters={...a.parameters,docs:{...(h=a.parameters)==null?void 0:h.docs,source:{originalSource:'{\n  args: {\n    label: \'Loremp ipsum\'\n  },\n  render: args => {\n    const [checked, setChecked] = useState<string[]>([]);\n    const handleOnCheckedChange = (id: string) => (value: boolean) => {\n      if (value) {\n        setChecked([...checked, id]);\n        return;\n      }\n      setChecked(checked.filter(c => c !== id));\n    };\n    return <div className="flex flex-col gap-6">\n        {[\'xs\', \'sm\'].map(size => <div key={size} className="flex flex-col gap-3">\n            <span className="leading-2 font-bold uppercase"> {size} </span>\n            <ChecboxFilter {...args} size={size} checked={checked.includes(`${size}-ck1`)} onCheckedChange={handleOnCheckedChange(`${size}-ck1`)} />\n            <ChecboxFilter {...args} size={size} count={100} checked={checked.includes(`${size}-ck2`)} onCheckedChange={handleOnCheckedChange(`${size}-ck2`)} />\n            <ChecboxFilter {...args} size={size} count={100} description="Loremp ipsum" checked={checked.includes(`${size}-ck3`)} onCheckedChange={handleOnCheckedChange(`${size}-ck3`)} />\n            <ChecboxFilter {...args} size={size} count={100} description="Lorem ipsum dolor sit amet, consectetur adipiscing elit. " checked={checked.includes(`${size}-ck4`)} onCheckedChange={handleOnCheckedChange(`${size}-ck4`)} />\n            <ChecboxFilter {...args} size={size} icon={<TestTubeDiagonalIcon />} checked={checked.includes(`${size}-ck5`)} onCheckedChange={handleOnCheckedChange(`${size}-ck5`)} />\n            <ChecboxFilter {...args} size={size} icon={<TestTubeDiagonalIcon />} count={100} checked={checked.includes(`${size}-ck6`)} onCheckedChange={handleOnCheckedChange(`${size}-ck6`)} />\n            <ChecboxFilter {...args} size={size} icon={<TestTubeDiagonalIcon />} count={100} description="Loremp ipsum" checked={checked.includes(`${size}-ck7`)} onCheckedChange={handleOnCheckedChange(`${size}-ck7`)} />\n            <ChecboxFilter {...args} size={size} icon={<TestTubeDiagonalIcon />} count={100} description="Lorem ipsum dolor sit amet, consectetur adipiscing elit. " checked={checked.includes(`${size}-ck8`)} onCheckedChange={handleOnCheckedChange(`${size}-ck8`)} />\n            <ChecboxFilter {...args} label="Lorem ipsum dolor sit amet, consectetur adipiscing elit. " size={size} icon={<TestTubeDiagonalIcon />} count={100} description="Lorem ipsum dolor sit amet, consectetur adipiscing elit. " checked={checked.includes(`${size}-ck9`)} onCheckedChange={handleOnCheckedChange(`${size}-ck9`)} />\n          </div>)}\n      </div>;\n  }\n}',...(k=(l=a.parameters)==null?void 0:l.docs)==null?void 0:k.source}}};const P=["Default"];export{a as Default,P as __namedExportsOrder,w as default};
