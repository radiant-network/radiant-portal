import{j as e}from"./jsx-runtime-D_zvdyIk.js";import{c as d,D as i,B as g,a as y,T as u,b as _}from"./table-tooltips-header-CxJJ7Ovx.js";import{C as x}from"./applications-config-viUeW4FZ.js";import{B as f}from"./chunk-C37GKA54-BLoCeHu7.js";import"./badge-aQXnmXeU.js";import"./utils-D-KgF5mV.js";import"./index-C66Dxnp2.js";import"./separator-6xmuS_PL.js";import"./index-CGj_12n1.js";import"./index-COcwYKbe.js";import"./index-D8dqFcAi.js";import"./index-BBPXtLXU.js";import"./x-CubKniSv.js";import"./createLucideIcon-8Lr1oLzj.js";import"./tooltip-BLxBvsFO.js";import"./index-CDVHwwC2.js";import"./index-DUXZ-Llx.js";import"./index-Dd-X3grP.js";import"./index-Bp_Zkv6j.js";import"./i18n-SNoutlBA.js";import"./iframe-Cfy6FYOv.js";import"./context-DkqwYzW-.js";import"./en-US-Bm9FTEXR.js";import"./button-D8fNpTo2.js";import"./ActionButton-B60wXCqX.js";import"./dropdown-menu-BfKDjvbV.js";import"./index-2ptLTYfO.js";import"./check-DRc1RmCY.js";import"./button.variants-BQkt_1YJ.js";import"./ellipsis-BM4jpslE.js";import"./spinner-BMSZ66Eg.js";import"./checkbox-DMd2svcp.js";import"./index-qxuqJ0RB.js";import"./skeleton-Shk8p_SP.js";import"./settings-DYVxWNf4.js";import"./number-format-D03oK8BY.js";import"./pagination-DZTQO5wc.js";import"./select-CE_hYQ3O.js";import"./chevron-down-BLzVWgYU.js";import"./api-Di5bdl6V.js";import"./empty-BZ3MdR6G.js";import"./chart-scatter-5c2GQdAf.js";import"./card-CaZUO5Sr.js";import"./search-DqA1hdnz.js";import"./circle-alert-DsWOU-5F.js";const j={variant_entity:{app_id:"variant_entity"},variant_exploration:{app_id:"variant_exploration_multi_select_filter",aggregations:[]},admin:{admin_code:"admin",app_id:"admin"},portal:{name:"",navigation:{}}},t=d(),D=[t.accessor("id",{cell:r=>r.getValue(),header:"Task ID",size:100}),t.accessor("type_code",{cell:r=>e.jsx(g,{variant:"secondary",tooltip:r.row.original.type_name,children:r.getValue()}),header:"Type",size:100}),t.accessor("patients",{cell:r=>e.jsx(y,{variant:"outline",badges:r.getValue()}),header:"Patients",minSize:148}),t.accessor("created_on",{cell:r=>e.jsx(_,{date:r.getValue()}),header:()=>e.jsx(u,{tooltips:"yyyy-mm-dd",children:"Created On"}),size:80})],h=Array.from(Array(21).keys()).map(r=>({id:r,type_code:"ngba",type_name:"Normal Genome Bioinformatic Analysis",created_on:"2021-10-12T13:08:00Z",patients:["father","mother","proband","sibling"]})),gr={title:"Data Display/Display Table",component:i,args:{data:h,columns:D},decorators:[r=>e.jsx(f,{children:e.jsx(x,{config:j,children:e.jsx(r,{})})})]},a={args:{},render:r=>e.jsx(i,{...r})},o={args:{data:[]},render:r=>e.jsx(i,{...r})};var s,p,m;a.parameters={...a.parameters,docs:{...(s=a.parameters)==null?void 0:s.docs,source:{originalSource:`{
  args: {},
  render: args => <DisplayTable {...args} />
}`,...(m=(p=a.parameters)==null?void 0:p.docs)==null?void 0:m.source}}};var n,l,c;o.parameters={...o.parameters,docs:{...(n=o.parameters)==null?void 0:n.docs,source:{originalSource:`{
  args: {
    data: []
  },
  render: args => <DisplayTable {...args} />
}`,...(c=(l=o.parameters)==null?void 0:l.docs)==null?void 0:c.source}}};const yr=["Default","Empty"];export{a as Default,o as Empty,yr as __namedExportsOrder,gr as default};
